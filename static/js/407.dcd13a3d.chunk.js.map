{"version":3,"file":"static/js/407.dcd13a3d.chunk.js","mappings":"0OAQO,MAAMA,EACXC,IAGEC,EAAAA,EAAAA,KAACC,EAAAA,GAAqB,CAACC,UAAWH,EAAMG,UAAUC,SAC/CJ,EAAMK,YACLL,EAAMI,UAENE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACEH,EAAAA,EAAAA,KAACO,EAAAA,EAAe,KAChBP,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CAACC,OAAO,UAAUC,MAAM,cAWrCC,EAA2CC,IAKjD,IALkD,SACvDR,EAAQ,MACRS,EAAQ,EAAC,YACTR,KACGL,GACJY,EACC,MAAME,EAAe,IAAIC,MAAMF,GAAOG,KAAK,CAAC,GAC5C,OACEf,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAH,SACGC,EACGD,EACAU,EAAaG,KAAI,CAACC,EAAGC,KACnBC,EAAAA,EAAAA,eAACZ,EAAAA,EAAe,IAAKR,EAAOqB,IAAKF,OAEtC,E,wBC3BA,MAAMG,EAAqCtB,IAChD,MAAM,SAAEuB,EAAQ,MAAEC,EAAK,MAAEC,EAAK,OAAEC,IAAWC,EAAAA,EAAAA,GACzC3B,EAAM4B,SAEFC,EAAUH,IAAWI,EAAAA,EAAiBC,KAM5C,OAJAC,EAAAA,EAAAA,YAAU,KACRT,GAAU,GACT,CAACA,KAGFtB,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAA7B,UACbE,EAAAA,EAAAA,MAACK,EAAkB,CAACE,MAAO,EAAGR,aAAcwB,EAASnB,MAAM,OAAMN,SAAA,EAC/DE,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,mBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOY,aAE9C9B,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,gBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOa,iBAE9C/B,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,qBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAO,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOc,WAElChC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,oBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOe,mBAE9CjC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,aACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOgB,OAAQ,SAEtDlC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,cACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOiB,eAE9CnC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,mBACxBE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,QAAOC,SAAA,EAAE+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOkB,aAAa,QACzDzC,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SACtB,OAALoB,QAAK,IAALA,GAAAA,EAAOmB,gBACJ,KAAIC,EAAAA,EAAAA,IAAqB,OAALpB,QAAK,IAALA,OAAK,EAALA,EAAOmB,oBAC3B,cAIVrC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,6BACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UACpB+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOqB,6BAGxBvC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,wBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UACpB0C,EAAAA,EAAAA,IAAoB,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOuB,yBAG3BzC,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SAAC,gBACxBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,UAAE0C,EAAAA,EAAAA,IAAoB,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOwB,iBAEjD1C,EAAAA,EAAAA,MAAC4B,EAAAA,GAAU,CAAA9B,SAAA,EACTH,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SACpBqB,EAAQ,mBAAqB,kBAEhCxB,EAAAA,EAAAA,KAAA,QAAME,UAAU,QAAOC,SACf,OAALqB,QAAK,IAALA,EAAAA,GAASmB,EAAAA,EAAAA,IAAqB,OAALpB,QAAK,IAALA,OAAK,EAALA,EAAOyB,YAAaC,EAAAA,aAIrC,E,4CCrErB,MAAMC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,IAAeC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAtBJ,CAAsB,8HAGlClD,EAAAA,IAeEuD,EAAmBL,EAAAA,GAAOM,IAAGJ,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAAVJ,CAAU,gEAKrBxC,IAAA,IAAC,MAAE+C,GAAO/C,EAAA,OAAK+C,EAAMC,SAASC,EAAE,IACjCC,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMC,SAASC,EAAE,IAIhCE,EAA6C/D,IACxD,MAAMgE,GAASC,EAAAA,EAAAA,IAAgBC,IAAK,IAAAC,EAAA,OAAiB,QAAjBA,EAAKD,EAAMF,cAAM,IAAAG,OAAA,EAAZA,EAAcC,IAAI,IACrDC,GAAeJ,EAAAA,EAAAA,IAAgBC,IAAK,IAAAI,EAAA,OAAiB,QAAjBA,EAAKJ,EAAMF,cAAM,IAAAM,OAAA,EAAZA,EAAc5C,MAAM,KACnE6C,EAAAA,EAAAA,KAEA,MAAM/C,EAAc,OAANwC,QAAM,IAANA,OAAM,EAANA,EAAQQ,IAAIxE,EAAM4B,SAC1BC,EAAUwC,IAAiBvC,EAAAA,EAAiBC,KAElD,OACEzB,EAAAA,EAAAA,MAAC6C,EAAO,CAACsB,cAAc,QAAQC,cAAc,QAAOtE,SAAA,EAClDE,EAAAA,EAAAA,MAACmD,EAAgB,CAAArD,SAAA,CACdoB,GACCvB,EAAAA,EAAAA,KAAA,OAAK0E,IAAKnD,EAAMoD,MAAOC,IAAKrD,EAAMsD,QAElC7E,EAAAA,EAAAA,KAAC8E,EAAAA,EAAW,CAACC,KAAMrB,EAAAA,EAAMC,SAASC,GAAIoB,aAAa,SAErD3E,EAAAA,EAAAA,MAACP,EAAyB,CACxBI,UAAU,sBACVE,aAAcwB,EAAQzB,SAAA,EAEtBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,oCAAmCC,SAC3C,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOsD,QAEV7E,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SAAO,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAO0D,OAAOC,uBAGlD7E,EAAAA,EAAAA,MAACP,EAAyB,CACxBI,UAAU,kBACVE,aAAcwB,EAAQzB,SAAA,EAEtBH,EAAAA,EAAAA,KAAA,QAAME,UAAU,uBAAsBC,UACnC+B,EAAAA,EAAAA,IAAiB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOY,UAEtB9B,EAAAA,EAAAA,MAAA,QAAAF,SAAA,EACEH,EAAAA,EAAAA,KAACmF,EAAAA,GAAa,CAACC,OAAOC,EAAAA,EAAAA,IAAsB,OAAL9D,QAAK,IAALA,OAAK,EAALA,EAAO+D,uBAAuBnF,UAClEoF,EAAAA,EAAAA,IAAmB,OAALhE,QAAK,IAALA,OAAK,EAALA,EAAO+D,0BAExBtF,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAAcC,SAAC,mBAG3B,E,cCtFP,MAAMqF,EAAqBrC,EAAAA,GAAOM,IAAGJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,+CAM/BsC,EAA4BtC,EAAAA,GAAOuC,GAAErC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,eAATJ,CAAS,2GAKrBxC,IAAA,IAAC,MAAE+C,GAAO/C,EAAA,OAAK+C,EAAMiC,OAAOC,MAAM,IAGlDC,EAAyB1C,EAAAA,GAAO2C,GAAEzC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,eAATJ,CAAS,yPAQlCU,IAAA,IAAC,MAAEH,GAAOG,EAAA,OAAKH,EAAMqC,YAAY,IAKnBC,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,OAAKtC,EAAMiC,OAAOM,OAAO,IACjDC,IAAA,IAAC,MAAExC,GAAOwC,EAAA,OAAKxC,EAAMiC,OAAOM,OAAO,ICnBnCE,EAAiC,CAC5C,KAAM,EACN,KAAM,EACN,KAAM,GACN,KAAM,GACN,KAAM,IACN,KAAM,IACNC,IAAK,OAMMC,EAAwDtG,IAEjEC,EAAAA,EAAAA,KAACyF,EAAyB,CAAAtF,UACvBmG,EAAAA,EAAAA,GAAmBH,GAAqBnF,KACvCL,IAAA,IAAE4F,EAAeC,GAAc7F,EAAA,OAC7BX,EAAAA,EAAAA,KAAC6F,EAAsB,CAErBY,QAASA,IAAM1G,EAAM2G,mBAAmBF,GACxCtG,UACEsG,IAAkBzG,EAAM4G,iBAAmB,gBAAaC,EACzDzG,SAEAoG,GANIA,EAOkB,M,6GCxB5B,MAiBDM,EAA4BC,OAAOC,OAAOrD,EAAAA,EAAMmD,aA4BhDG,EAA2BA,KAC/B,MAAMC,EAAgBJ,EAAY7F,KAAKP,GA3BTyG,KAC9B,MAAMC,EAAaC,OAAOC,WAAWH,GAUrC,OAAOI,EAAAA,EAAAA,IARwBC,IAC7BJ,EAAWK,iBAAiB,SAAUD,EAAQ,IAGdA,IAChCJ,EAAWM,oBAAoB,SAAUF,EAAQ,IAMjDG,MACA1G,EAAAA,EAAAA,IAAIL,IAAyB,IAAxB,QAAEgH,EAAO,MAAEC,GAAOjH,EACrB,MAAMkH,EAAaC,EAA4BF,GAC/C,MAAO,CACLD,UACAI,mBAAoBF,EACpBG,kBAAmBC,EAAqBJ,GACzC,IAEJ,EAKCK,CAAuB,eAAezH,QAGxC,OAAO0H,EAAAA,EAAAA,MAASlB,EAAc,EAG1Ba,EAA+BZ,IAA2C,IAADkB,EAC7E,MAAMP,EAAiC,QAAvBO,EAAGlB,EAAMmB,MAAM,gBAAQ,IAAAD,OAAA,EAApBA,EAAuB,GAC1C,GAAIP,EACF,OAAOA,CACT,EAGWI,EAAwBJ,IAAkC,IAAAS,EAAA,OACrEC,EAAAA,EAAAA,IAAwB,OAAVV,QAAU,IAAVA,GAAwB,QAAdS,EAAVT,EAAYQ,MAAM,cAAM,IAAAC,OAAd,EAAVA,EAA2B,GAAG,ECtExCE,EAAaP,EAAqBvE,EAAAA,EAAMmD,YAAY4B,QCMpDD,EAAaP,EAAqBvE,EAAAA,EAAMmD,YAAY4B,QAE7CC,EAAqB,WAA8B,IAA7BC,EAAUC,UAAAC,OAAA,QAAAjC,IAAAgC,UAAA,GAAAA,UAAA,GAAGJ,EAC9C,MAAOM,EAAUC,IAAeC,EAAAA,EAAAA,UAAS5B,OAAO6B,WAAaN,GAEvDO,GAAeC,EAAAA,EAAAA,cAClBd,KACKe,EAAAA,EAAAA,GAAUf,EAAML,oBAClBe,EDH0B,SAChCM,GAEI,IADJV,EAAUC,UAAAC,OAAA,QAAAjC,IAAAgC,UAAA,GAAAA,UAAA,GAAGJ,EAEb,IAAIY,EAAAA,EAAAA,GAAUC,EAAgBrB,mBAK5B,OAHEqB,EAAgBrB,oBAAsBW,EAClCU,EAAgB1B,QACL0B,EAAgBrB,kBAAmBW,EAGtD,OAAO,CACT,CCToBW,CAAmBjB,EAAOM,GACxC,GAEF,CAACA,IFPHY,MEYA,OFZAA,EEUgBL,GFRhBnH,EAAAA,EAAAA,YAAU,KACR,MAAMyH,EAAexC,IAA2ByC,UAC9CF,GAGF,MAAO,KACLC,EAAaE,aAAa,CAC3B,GACA,CAACH,IEEGT,CACT,ECxBM5F,EAAUC,EAAAA,GAAOM,IAAGJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,mEAObwG,EAAyB5J,IAC7BC,EAAAA,EAAAA,KAACkD,EAAO,CAAA/C,SAAEJ,EAAMI,WCRZyJ,EAAmBzG,EAAAA,GAAOM,IAAGJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAVJ,CAAU,gCAC/BxC,IAAA,IAAC,MAAE+C,GAAO/C,EAAA,OAAK+C,EAAMiC,OAAOkE,gBAAgB,IAI1CC,GAAiB3G,EAAAA,EAAAA,IAAO4G,EAAAA,IAAY1G,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAnBJ,CAAmB,+JAE3BU,IAAA,IAAC,MAAEH,GAAOG,EAAA,MAC5B,GAAGH,EAAMiC,OAAOqE,iBAAiB,IAC1BhE,IAAA,IAAC,MAAEtC,GAAOsC,EAAA,OAAKtC,EAAMiC,OAAOkE,gBAAgB,IAQpC3D,IAAA,IAAC,MAAExC,GAAOwC,EAAA,OAAKxC,EAAMC,SAASsG,UAAU,IAC1CC,IAAA,IAAC,MAAExG,GAAOwG,EAAA,OAAKxG,EAAMqC,YAAY,ICoBrCoE,EAKXpK,IAEA,MAAMqK,GAASC,EAAAA,EAAAA,UACb,KAAMC,EAAAA,EAAAA,IAAcvK,EAAMwK,UAAWxK,EAAMyK,UAC3C,CAACzK,EAAMwK,UAAWxK,EAAMyK,UAGpBC,EAAW/B,IAEjB,GAAI3I,EAAMyB,MACR,OAAOxB,EAAAA,EAAAA,KAAC2J,EAAiB,CAAAxJ,SAAEJ,EAAMyB,QAWnC,OACExB,EAAAA,EAAAA,KAAC4J,EAAgB,CAAAzJ,UACfH,EAAAA,EAAAA,KAAC0K,EAAAA,EAAmB,CAACjK,MAAM,OAAOkK,OAAQ,EAAExK,UAC1CE,EAAAA,EAAAA,MAACuK,EAAAA,EAAS,CACRC,KAAM9K,EAAMwK,UACZO,OAAQ,CACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAMT,EAAW,EAAI,IACrBtK,SAAA,EAEFH,EAAAA,EAAAA,KAAA,QAAAG,UACEE,EAAAA,EAAAA,MAAA,kBAAgB8K,GAAG,mBAAmBC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAGpL,SAAA,EAC/DH,EAAAA,EAAAA,KAAA,QACEwL,OAAO,KACPC,UAAW/H,EAAAA,EAAMiC,OAAOM,QACxByF,YAAa,MAEf1L,EAAAA,EAAAA,KAAA,QACEwL,OAAO,MACPC,UAAW/H,EAAAA,EAAMiC,OAAOgG,aACxBD,YAAa,WAInB1L,EAAAA,EAAAA,KAAC4L,EAAAA,EAAK,CACJpB,QAASzK,EAAM8L,aACfC,cAAe/L,EAAMgM,oBACrBC,UAAU,EACVC,UAAU,EACVC,OAAQxI,EAAAA,EAAMiC,OAAOkE,iBACrBsC,QAASzI,EAAAA,EAAM0I,mBAEjBpM,EAAAA,EAAAA,KAACqM,EAAAA,EAAK,CACJC,KAAK,SACLlC,OAAQA,EACR0B,cAAe/L,EAAMwM,eACrBP,UAAU,EACVC,UAAU,EACVC,OAAQxI,EAAAA,EAAMiC,OAAOkE,iBACrBsC,QAASzI,EAAAA,EAAM0I,gBACfI,KAAM/B,KAERzK,EAAAA,EAAAA,KAACyM,EAAAA,EAAO,CACNC,eArD0DC,CAClEC,EACAC,IAEO,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS7L,KAAK8L,IAAK,IAAAC,EAAA,OACjBC,EAAAA,EAAAA,IAA4B,QAAdD,EAACD,EAAMD,eAAO,IAAAE,OAAA,EAAbA,EAAgBhN,EAAM8L,cAAc,IAiD7CoB,QAASC,EACTC,UAAYL,GAAU,CAACA,EAAO/M,EAAMwM,eAAeO,OAErD9M,EAAAA,EAAAA,KAACoN,EAAAA,EAAI,CACHd,KAAK,WACL9B,QAASzK,EAAMyK,QACf0B,OAAQxI,EAAAA,EAAMiC,OAAOM,QACrBlF,KAAK,iCAIM,EAMjBmM,EAIJnN,IACI,IAADsN,EAAAC,EAAAC,EAAAC,EAAAC,EACH,OAAK1N,EAAM2N,QAAW3N,EAAM8M,SAK1BxM,EAAAA,EAAAA,MAACyJ,EAAc,CAAA3J,SAAA,EACbH,EAAAA,EAAAA,KAAA,QAAME,UAAU,iBAAgBC,SACT,QADSkN,EAC7BtN,EAAM2M,sBAAc,IAAAW,OAAA,EAApBA,EAAAM,KAAA5N,EAAuBA,EAAM6M,MAAO7M,EAAM8M,YAE7C7M,EAAAA,EAAAA,KAAA,QAAME,UAAU,iBAAgBC,cACCyG,KAAjB,QAAb0G,EAAAvN,EAAM8M,eAAO,IAAAS,GAAK,QAALC,EAAbD,EAAgB,UAAE,IAAAC,OAAL,EAAbA,EAAoBT,SACJ,QADuBU,EACtCzN,EAAMoN,iBAAS,IAAAK,OAAA,EAAfA,EAAAG,KAAA5N,EACEA,EAAM8M,QAAQ,GAAGC,MACI,QADCW,EACtB1N,EAAM8M,QAAQ,GAAGhI,YAAI,IAAA4I,EAAAA,EAAI,GACzB1N,EAAM8M,QAAQ,GACd,EACA9M,EAAM8M,eAfP,IAkBU,E,wDChJd,MCHDe,GAAgBC,EAAAA,KAAW1D,GAOpB2D,GAAsDnN,IAG5D,IAH6D,iBAClEgG,KACG5G,GACJY,EACC,MAAM,kBACJoN,EAAiB,kBACjBC,EAAiB,OACjBC,EAAM,MACNzM,GDZ+BG,KACjC,MAAOH,EAAO0M,IAAYlF,EAAAA,EAAAA,eAA6BpC,IAChDmH,EAAmBI,IAAwBnF,EAAAA,EAAAA,WAChDoF,EAAAA,GAAAA,QAGKC,EAAYJ,IAAUK,EAAAA,GAAAA,GAC3BC,EAAAA,EAAcC,uBACd,CACEC,UAAAA,CAAWC,GACTR,OAAStH,GACTuH,GAAsBlK,GACpBA,EAAM0K,IAAID,EAASE,KAAMF,EAASG,sBAEtC,EACAC,OAAAA,CAAQC,GACN,MAAMC,EAAe,iBAAiBrN,sBACtCsN,QAAQzN,MAAMwN,EAAcD,GAC5Bb,EAASc,EACX,IAYJ,MAAO,CACLjB,oBACAC,mBAVwB7E,EAAAA,EAAAA,cACvB+F,IACChB,OAAStH,GACTyH,EAAW,IAAKa,EAAS/D,GAAIxJ,EAASwN,YAAaC,GAAAA,GAAmB,GAExE,CAACf,EAAY1M,IAMbsM,SACAzM,QACD,ECvBG6N,CAAmBtP,EAAM4B,UAE7BI,EAAAA,EAAAA,YAAU,KACRiM,EAAkB,CAAEY,KAAMjI,GAAmB,GAC5C,CAACA,EAAkBqH,IAEtB,MAAMzD,GAAYF,EAAAA,EAAAA,UAAQ,IAAM0D,EAAkBxJ,IAAIoC,IAAmB,CACvEoH,EACApH,IAGI+F,GAAiBvD,EAAAA,EAAAA,cACpBmG,GACC3I,IAAqBR,EAAoB,OACrCoJ,EAAAA,EAAAA,IAAcD,IACdE,EAAAA,EAAAA,IAAWF,IACjB,CAAC3I,IAGH,OAAOsH,GACLjO,EAAAA,EAAAA,KAACyP,EAAAA,EAAc,KAEfzP,EAAAA,EAAAA,KAAC4N,GAAa,CACZrD,UAAWA,EACXC,QAAQ,QACRqB,aAAa,OACbU,eAAgBrK,EAAAA,GAChB6J,oBAAqBW,EACrBlL,MAAOA,GAEV,EC1CUkO,GAAkBA,KAC7B,MAAM,GAAEvE,IAAOwE,EAAAA,EAAAA,MACRhJ,EAAkBiJ,IAAe5G,EAAAA,EAAAA,UACtC7C,EAAoB,OAGtB,OACE9F,EAAAA,EAAAA,MAACmF,EAAkB,CAAArF,SAAA,EACjBH,EAAAA,EAAAA,KAAC8D,EAAe,CAACnC,QAASwJ,KAC1BnL,EAAAA,EAAAA,KAACqG,EAAuB,CACtBM,iBAAkBA,EAClBD,mBAAoBkJ,KAEtB5P,EAAAA,EAAAA,KAAC8N,GAAoB,CAACnM,QAASwJ,EAAIxE,iBAAkBA,KACrD3G,EAAAA,EAAAA,KAACqB,EAAsB,CAACM,QAASwJ,MACd,EAIzB,K","sources":["components/placeholders/PlaceholderWrappers.tsx","components/crypto-assets/CryptoAssetFullDetails.tsx","components/crypto-assets/CryptoAssetInfo.tsx","components/price-action/styled.tsx","components/price-action/ChartTimeRangeSelection.tsx","utils/hooks/useMediaQueries.ts","utils/isMediaQueryActive.ts","utils/hooks/useMediaQueryMatch.ts","components/charts/ChartErrorMessage.tsx","components/charts/styled.tsx","components/charts/Chart.tsx","components/price-action/useHistoricalPrice.ts","components/price-action/HistoricalPriceChart.tsx","components/price-action/PriceAction.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { MainSubContentWrapper } from \"../ContentWrappers\";\nimport { TextPlaceHolder, TextPlaceholderProps } from \"./styled\";\n\ninterface MainSubPlaceholderProps {\n  className?: string;\n  showContent: boolean;\n}\nexport const MainSubContentPlaceholder: FC<MainSubPlaceholderProps> = (\n  props,\n) => {\n  return (\n    <MainSubContentWrapper className={props.className}>\n      {props.showContent ? (\n        props.children\n      ) : (\n        <>\n          <TextPlaceHolder />\n          <TextPlaceHolder height=\"0.75rem\" width=\"2rem\" />\n        </>\n      )}\n    </MainSubContentWrapper>\n  );\n};\n\ninterface PlaceholderProps extends TextPlaceholderProps {\n  count?: number;\n  showContent: boolean;\n}\nexport const ContentPlaceholder: FC<PlaceholderProps> = ({\n  children,\n  count = 1,\n  showContent,\n  ...props\n}) => {\n  const placeholders = new Array(count).fill({});\n  return (\n    <>\n      {showContent\n        ? children\n        : placeholders.map((_, index) => (\n            <TextPlaceHolder {...props} key={index} />\n          ))}\n    </>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport { StateFetchStatus } from \"../../redux/AppState\";\nimport {\n  DATETIME_FORMAT,\n  formatPrice,\n  formatQuantity,\n  parseDateString,\n} from \"../../utils/formatters\";\nimport { ContentPlaceholder } from \"../placeholders/PlaceholderWrappers\";\nimport { DetailsWrapper, DetailsRow } from \"./styled\";\nimport { useAssetDetailsService } from \"./useAssetsService\";\n\ninterface Props {\n  assetId: string;\n}\n\nexport const CyrptoAssetFullDetails: FC<Props> = (props) => {\n  const { getAsset, asset, error, status } = useAssetDetailsService(\n    props.assetId,\n  );\n  const loading = status === StateFetchStatus.Busy;\n\n  useEffect(() => {\n    getAsset();\n  }, [getAsset]);\n\n  return (\n    <DetailsWrapper>\n      <ContentPlaceholder count={4} showContent={!loading} width=\"8rem\">\n        <DetailsRow>\n          <span className=\"label\">Current Price</span>\n          <span className=\"value\">{formatPrice(asset?.price)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Market Cap</span>\n          <span className=\"value\">{formatPrice(asset?.marketCap)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Market Cap Rank</span>\n          <span className=\"value\">{asset?.rank}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Trading Volume</span>\n          <span className=\"value\">{formatPrice(asset?.totalVolume)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">24h Low</span>\n          <span className=\"value\">{formatPrice(asset?.low24h, 3)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">24h High</span>\n          <span className=\"value\">{formatPrice(asset?.high24h)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">All-Time High</span>\n          <span>\n            <span className=\"value\">{formatPrice(asset?.allTimeHigh)} </span>\n            <span className=\"value--small\">\n              {asset?.allTimeHighDate\n                ? `(${parseDateString(asset?.allTimeHighDate)})`\n                : \"--\"}\n            </span>\n          </span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Fully Diluted Valuation</span>\n          <span className=\"value\">\n            {formatPrice(asset?.fullyDilutedValuation)}\n          </span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Circulating Supply</span>\n          <span className=\"value\">\n            {formatQuantity(asset?.circulatingSupply)}\n          </span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">Max Supply</span>\n          <span className=\"value\">{formatQuantity(asset?.maxSupply)}</span>\n        </DetailsRow>\n        <DetailsRow>\n          <span className=\"label\">\n            {error ? \"Failed To Update\" : \"Last Updated\"}\n          </span>\n          <span className=\"value\">\n            {error ?? parseDateString(asset?.lastUpdated, DATETIME_FORMAT)}\n          </span>\n        </DetailsRow>\n      </ContentPlaceholder>\n    </DetailsWrapper>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { theme } from \"../../theme/theme\";\nimport {\n  formatPercent,\n  formatPrice,\n  getColorFromSign,\n} from \"../../utils/formatters\";\nimport { usePricesFeed } from \"../../utils/hooks/useFeedService\";\nimport { PlaceHolder } from \"../placeholders/styled\";\nimport { ContentWrapper, MainSubContentWrapper } from \"../ContentWrappers\";\nimport { PercentChange } from \"./styled\";\nimport { MainSubContentPlaceholder } from \"../placeholders/PlaceholderWrappers\";\nimport { useAppSelector } from \"../../redux/useAppSelector\";\nimport { StateFetchStatus } from \"../../redux/AppState\";\n\ninterface CryptoAssetInfoProps {\n  assetId: string;\n}\n\nconst Wrapper = styled(ContentWrapper)`\n  place-content: unset;\n\n  ${MainSubContentWrapper} {\n    text-align: left;\n\n    &.numeric-content {\n      text-align: right;\n    }\n  }\n\n  .content {\n    &--asset-name {\n      padding-right: 3rem;\n    }\n  }\n`;\n\nconst AssetNameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  img {\n    height: ${({ theme }) => theme.fontSize.h4};\n    width: ${({ theme }) => theme.fontSize.h4};\n  }\n`;\n\nexport const CryptoAssetInfo: FC<CryptoAssetInfoProps> = (props) => {\n  const assets = useAppSelector((state) => state.assets?.list);\n  const assetsStatus = useAppSelector((state) => state.assets?.status);\n  usePricesFeed();\n\n  const asset = assets?.get(props.assetId);\n  const loading = assetsStatus === StateFetchStatus.Busy;\n\n  return (\n    <Wrapper maxColumnSize=\"15rem\" minColumnSize=\"20rem\">\n      <AssetNameWrapper>\n        {asset ? (\n          <img src={asset.image} alt={asset.name} />\n        ) : (\n          <PlaceHolder size={theme.fontSize.h4} borderRadius=\"50%\" />\n        )}\n        <MainSubContentPlaceholder\n          className=\"content--asset-name\"\n          showContent={!loading}\n        >\n          <span className=\"content__main--large content-name\">\n            {asset?.name}\n          </span>\n          <span className=\"content__sub\">{asset?.symbol.toUpperCase()}</span>\n        </MainSubContentPlaceholder>\n      </AssetNameWrapper>\n      <MainSubContentPlaceholder\n        className=\"numeric-content\"\n        showContent={!loading}\n      >\n        <span className=\"content__main--large\">\n          {formatPrice(asset?.price)}\n        </span>\n        <span>\n          <PercentChange color={getColorFromSign(asset?.priceChangePercent24h)}>\n            {formatPercent(asset?.priceChangePercent24h)}\n          </PercentChange>\n          <span className=\"content__sub\"> (24h)</span>\n        </span>\n      </MainSubContentPlaceholder>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components/macro\";\n\nexport const PriceActionWrapper = styled.div`\n  width: 100%;\n  max-width: 70rem;\n  margin: 0 auto;\n`;\n\nexport const TimeRangeSelectionWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  border-bottom: solid 1px ${({ theme }) => theme.colors.border};\n`;\n\nexport const TimeRangeSelectionItem = styled.li`\n  text-align: center;\n  width: 4rem;\n  padding-bottom: 1.5rem;\n  transition: all 200ms;\n  margin: 0 0.5rem;\n  margin-bottom: -1px;\n  border-bottom: solid 1px transparent;\n  opacity: ${({ theme }) => theme.opacityMuted};\n\n  &.selected,\n  &:hover {\n    opacity: 1;\n    border-bottom-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:hover {\n    cursor: default;\n  }\n`;\n","import React, { FC } from \"react\";\nimport { HistoricalDaysRange } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { typedObjectEntries } from \"../../utils/typedObjectEntries\";\nimport { TimeRangeSelectionItem, TimeRangeSelectionWrapper } from \"./styled\";\n\ntype HistoricalDaysRangeLabel = \"1D\" | \"5D\" | \"1M\" | \"3M\" | \"6M\" | \"1Y\" | \"ALL\";\n\ntype Intervals = {\n  [interval in HistoricalDaysRangeLabel]: HistoricalDaysRange;\n};\n\nexport const historicalDaysRange: Intervals = {\n  \"1D\": 1,\n  \"5D\": 5,\n  \"1M\": 30,\n  \"3M\": 90,\n  \"6M\": 180,\n  \"1Y\": 360,\n  ALL: \"max\",\n};\ninterface TimeRangeSelectionProps {\n  selectedDayRange: HistoricalDaysRange;\n  onSelectionChanged(selectedInterval: HistoricalDaysRange): void;\n}\nexport const ChartTimeRangeSelection: FC<TimeRangeSelectionProps> = (props) => {\n  return (\n    <TimeRangeSelectionWrapper>\n      {typedObjectEntries(historicalDaysRange).map(\n        ([intervalLabel, intervalValue]) => (\n          <TimeRangeSelectionItem\n            key={intervalLabel}\n            onClick={() => props.onSelectionChanged(intervalValue)}\n            className={\n              intervalValue === props.selectedDayRange ? \"selected\" : undefined\n            }\n          >\n            {intervalLabel}\n          </TimeRangeSelectionItem>\n        ),\n      )}\n    </TimeRangeSelectionWrapper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { fromEventPattern, merge } from \"rxjs\";\nimport { NodeEventHandler } from \"rxjs/internal/observable/fromEvent\";\nimport { map } from \"rxjs/operators\";\nimport { theme, Theme } from \"../../theme/theme\";\nimport { getSafeNumber } from \"../safeGetters\";\n\nexport interface MediaQueryMatch {\n  matches: boolean /*matches is false when expanding screen size */;\n  matchingScreenSize?: ScreenSize;\n  numericScreenSize?: number;\n}\n\nexport const useMediaQueries = (\n  onMediaQueryChange: (match: MediaQueryMatch) => void,\n) => {\n  useEffect(() => {\n    const subscription = subscribeToMediaQueries$().subscribe(\n      onMediaQueryChange,\n    );\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [onMediaQueryChange]);\n};\n\n//HELPERS\n\ntype ScreenSize = Theme[\"screenSizes\"][keyof Theme[\"screenSizes\"]];\nconst screenSizes: ScreenSize[] = Object.values(theme.screenSizes);\n\nconst subscribeToMediaQuery$ = (query: string) => {\n  const mediaQuery = window.matchMedia(query);\n\n  const addChangeMediaHandler = (handler: NodeEventHandler) => {\n    mediaQuery.addEventListener(\"change\", handler);\n  };\n\n  const removeChangeMediaHandler = (handler: NodeEventHandler) => {\n    mediaQuery.removeEventListener(\"change\", handler);\n  };\n\n  return fromEventPattern<MediaQueryListEvent>(\n    addChangeMediaHandler,\n    removeChangeMediaHandler,\n  ).pipe<MediaQueryMatch>(\n    map(({ matches, media }) => {\n      const screenSize = getScreenSizeFromMediaQuery(media);\n      return {\n        matches,\n        matchingScreenSize: screenSize,\n        numericScreenSize: getNumericScreenSize(screenSize),\n      };\n    }),\n  );\n};\n\nconst subscribeToMediaQueries$ = () => {\n  const mediaQueries$ = screenSizes.map((width) =>\n    subscribeToMediaQuery$(`(max-width: ${width})`),\n  );\n\n  return merge(...mediaQueries$);\n};\n\nconst getScreenSizeFromMediaQuery = (query: string): ScreenSize | undefined => {\n  const screenSize = query.match(/\\d+px/)?.[0];\n  if (screenSize) {\n    return screenSize as ScreenSize;\n  }\n};\n\nexport const getNumericScreenSize = (screenSize: ScreenSize | undefined) =>\n  getSafeNumber(screenSize?.match(/\\d+/)?.[0]);\n","import { theme } from \"../theme/theme\";\nimport { getNumericScreenSize, MediaQueryMatch } from \"./hooks/useMediaQueries\";\nimport { isDefined } from \"./isDefined\";\n\nconst tabletSize = getNumericScreenSize(theme.screenSizes.tablet)!;\n\nconst isLessThan = (val1: number, val2: number) => val1 < val2;\n\n/**\n * determines if the (max-width: targetSize) media query is active\n * @param targetSize desired max-width; default is 768px\n * @returns\n *   true if screenSize is targetSize or smaller and\n *   false if screenSize is targetSize or larger\n */\nexport const isMediaQueryActive = (\n  mediaQueryMatch: MediaQueryMatch,\n  targetSize = tabletSize,\n) => {\n  if (isDefined(mediaQueryMatch.numericScreenSize)) {\n    const isActive =\n      mediaQueryMatch.numericScreenSize === targetSize\n        ? mediaQueryMatch.matches\n        : isLessThan(mediaQueryMatch.numericScreenSize, targetSize);\n    return isActive;\n  }\n  return false;\n};\n","import { useState, useCallback } from \"react\";\nimport { theme } from \"../../theme/theme\";\nimport { isDefined } from \"../isDefined\";\nimport { isMediaQueryActive } from \"../isMediaQueryActive\";\nimport {\n  getNumericScreenSize,\n  MediaQueryMatch,\n  useMediaQueries,\n} from \"./useMediaQueries\";\n\nconst tabletSize = getNumericScreenSize(theme.screenSizes.tablet)!;\n\nexport const useMediaQueryMatch = (targetSize = tabletSize) => {\n  const [isActive, setIsActive] = useState(window.innerWidth < targetSize);\n\n  const onMediaMatch = useCallback(\n    (match: MediaQueryMatch) => {\n      if (isDefined(match.numericScreenSize)) {\n        setIsActive(isMediaQueryActive(match, targetSize));\n      }\n    },\n    [targetSize],\n  );\n\n  useMediaQueries(onMediaMatch);\n\n  return isActive;\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst Wrapper = styled.div`\n  padding: 2rem 1rem;\n  text-align: center;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const ChartErrorMessage: FC = (props) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n","import styled from \"styled-components/macro\";\nimport { BaseWrapper } from \"../ContentWrappers\";\n\nexport const MainChartWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n  margin-top: 3rem;\n`;\n\nexport const ToolTipWrapper = styled(BaseWrapper)`\n  line-height: 1.5;\n  background-color: ${({ theme }) =>\n    `${theme.colors.secondaryDark}BB`}; //add opacity to background HEX color\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n  padding: 1rem;\n\n  span {\n    display: block;\n  }\n  .tooltip {\n    &__label {\n      font-size: ${({ theme }) => theme.fontSize.bodyXSmall};\n      opacity: ${({ theme }) => theme.opacityMuted};\n    }\n    &__value {\n      font-weight: bold;\n    }\n  }\n`;\n","import React, { ReactNode, useMemo } from \"react\";\nimport {\n  Area,\n  AreaChart,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { Payload } from \"recharts/types/component/DefaultTooltipContent\";\nimport { theme } from \"../../theme/theme\";\nimport { formatDateTime } from \"../../utils/formatters\";\nimport { useMediaQueryMatch } from \"../../utils/hooks/useMediaQueryMatch\";\nimport { getSafeMinMax } from \"../../utils/safeGetters\";\nimport { StringKey } from \"../../utils/types\";\nimport { ChartErrorMessage } from \"./ChartErrorMessage\";\nimport { MainChartWrapper, ToolTipWrapper } from \"./styled\";\n\ninterface ChartPayload<T extends Record<string, any>, K extends StringKey<T>>\n  extends Payload<T[K], string> {\n  payload?: T;\n}\n\ntype ToolTipLabelFormatter<\n  T extends Record<string, any>,\n  K extends StringKey<T>\n> = (label: string, payload: ChartPayload<T, K>[]) => ReactNode;\ninterface ChartProps<\n  Data,\n  DataKey extends StringKey<Data>,\n  XAxisKey extends StringKey<Data>\n> {\n  chartData: Data[] | undefined;\n  dataKey: DataKey;\n  xAxisDataKey: XAxisKey;\n  valueFormatter(value?: Data[DataKey]): string;\n  xAxisLabelFormatter(label?: Data[XAxisKey]): string;\n  error?: string;\n}\n\nexport const Chart = <\n  Data extends Record<string, any>,\n  DataKey extends StringKey<Data>,\n  XAxisKey extends StringKey<Data>\n>(\n  props: ChartProps<Data, DataKey, XAxisKey>\n) => {\n  const domain = useMemo(\n    () => getSafeMinMax(props.chartData, props.dataKey),\n    [props.chartData, props.dataKey]\n  );\n\n  const hideAxis = useMediaQueryMatch();\n\n  if (props.error) {\n    return <ChartErrorMessage>{props.error}</ChartErrorMessage>;\n  }\n\n  const toolTipLabelFormatter: ToolTipLabelFormatter<Data, DataKey> = (\n    label,\n    payload\n  ) =>\n    payload?.map((value) =>\n      formatDateTime(value.payload?.[props.xAxisDataKey])\n    );\n\n  return (\n    <MainChartWrapper>\n      <ResponsiveContainer width=\"100%\" aspect={2}>\n        <AreaChart\n          data={props.chartData}\n          margin={{\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: hideAxis ? 0 : 30,\n          }}\n        >\n          <defs>\n            <linearGradient id=\"primary-gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop\n                offset=\"5%\"\n                stopColor={theme.colors.primary}\n                stopOpacity={0.8}\n              />\n              <stop\n                offset=\"95%\"\n                stopColor={theme.colors.primaryLight}\n                stopOpacity={0.1}\n              />\n            </linearGradient>\n          </defs>\n          <XAxis\n            dataKey={props.xAxisDataKey}\n            tickFormatter={props.xAxisLabelFormatter}\n            tickLine={false}\n            axisLine={false}\n            stroke={theme.colors.fontOnBackground}\n            opacity={theme.opacityDisabled}\n          />\n          <YAxis\n            type=\"number\"\n            domain={domain}\n            tickFormatter={props.valueFormatter}\n            tickLine={false}\n            axisLine={false}\n            stroke={theme.colors.fontOnBackground}\n            opacity={theme.opacityDisabled}\n            hide={hideAxis}\n          />\n          <Tooltip<Data[DataKey], string>\n            labelFormatter={toolTipLabelFormatter}\n            content={CustomTooltip}\n            formatter={(value) => [value, props.valueFormatter(value)]}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey={props.dataKey}\n            stroke={theme.colors.primary}\n            fill=\"url(#primary-gradient)\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </MainChartWrapper>\n  );\n};\n\nexport default Chart;\n\nconst CustomTooltip = <\n  Data extends Record<string, string | number>,\n  DataKey extends StringKey<Data>\n>(\n  props: TooltipProps<Data[DataKey], string>\n) => {\n  if (!props.active || !props.payload) {\n    return null;\n  }\n\n  return (\n    <ToolTipWrapper>\n      <span className=\"tooltip__label\">\n        {props.labelFormatter?.(props.label, props.payload)}\n      </span>\n      <span className=\"tooltip__value\">\n        {props.payload?.[0]?.value !== undefined &&\n          props.formatter?.(\n            props.payload[0].value,\n            props.payload[0].name ?? \"\",\n            props.payload[0],\n            0,\n            props.payload\n          )}\n      </span>\n    </ToolTipWrapper>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { AssetsService } from \"../../services/crypto_assets/AssetsService\";\nimport { useService } from \"../../utils/hooks/useService\";\nimport {\n  HistoricalAssetPriceRequest,\n  HistoricalDaysRange,\n  HistoricalPriceData,\n} from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { Map } from \"immutable\";\nimport { DEFAULT_CURRENCY } from \"../../utils/constants\";\n\nexport const useHistoricalPrice = (assetId: string) => {\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [assetPriceHistory, setAssetPriceHistory] = useState(\n    Map<HistoricalDaysRange, HistoricalPriceData[]>(),\n  );\n\n  const [setRequest, isBusy] = useService(\n    AssetsService.getHistoricalPriceData,\n    {\n      onResponse(response) {\n        setError(undefined);\n        setAssetPriceHistory((state) =>\n          state.set(response.days, response.historicalPriceData),\n        );\n      },\n      onError(err) {\n        const errorMessage = `Error getting ${assetId} historical prices`;\n        console.error(errorMessage, err);\n        setError(errorMessage);\n      },\n    },\n  );\n\n  const getHistoricalData = useCallback(\n    (request: Omit<HistoricalAssetPriceRequest, \"id\" | \"vs_currency\">) => {\n      setError(undefined);\n      setRequest({ ...request, id: assetId, vs_currency: DEFAULT_CURRENCY });\n    },\n    [setRequest, assetId],\n  );\n\n  return {\n    assetPriceHistory,\n    getHistoricalData,\n    isBusy,\n    error,\n  };\n};\n","import React, { FC, useMemo, useEffect, useCallback } from \"react\";\nimport { HistoricalDaysRange } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { formatDate, formatDayTime, formatPrice } from \"../../utils/formatters\";\nimport { Chart } from \"../charts/Chart\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\nimport { historicalDaysRange } from \"./ChartTimeRangeSelection\";\nimport { useHistoricalPrice } from \"./useHistoricalPrice\";\n\nconst MemoizedChart = React.memo(Chart) as typeof Chart;\n\ninterface HistoricalPriceChartProps {\n  assetId: string;\n  selectedDayRange: HistoricalDaysRange;\n}\n\nexport const HistoricalPriceChart: FC<HistoricalPriceChartProps> = ({\n  selectedDayRange,\n  ...props\n}) => {\n  const {\n    assetPriceHistory,\n    getHistoricalData,\n    isBusy,\n    error,\n  } = useHistoricalPrice(props.assetId);\n\n  useEffect(() => {\n    getHistoricalData({ days: selectedDayRange });\n  }, [selectedDayRange, getHistoricalData]);\n\n  const chartData = useMemo(() => assetPriceHistory.get(selectedDayRange), [\n    assetPriceHistory,\n    selectedDayRange,\n  ]);\n\n  const labelFormatter = useCallback(\n    (time?: number) =>\n      selectedDayRange === historicalDaysRange[\"1D\"]\n        ? formatDayTime(time)\n        : formatDate(time),\n    [selectedDayRange],\n  );\n\n  return isBusy ? (\n    <LoadingSpinner />\n  ) : (\n    <MemoizedChart\n      chartData={chartData}\n      dataKey=\"price\"\n      xAxisDataKey=\"time\"\n      valueFormatter={formatPrice}\n      xAxisLabelFormatter={labelFormatter}\n      error={error}\n    />\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { HistoricalDaysRange } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { CyrptoAssetFullDetails } from \"../crypto-assets/CryptoAssetFullDetails\";\nimport { CryptoAssetInfo } from \"../crypto-assets/CryptoAssetInfo\";\nimport {\n  ChartTimeRangeSelection,\n  historicalDaysRange,\n} from \"./ChartTimeRangeSelection\";\nimport { HistoricalPriceChart } from \"./HistoricalPriceChart\";\nimport { PriceActionWrapper } from \"./styled\";\n\nexport const PriceAction: FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [selectedDayRange, setDayRange] = useState<HistoricalDaysRange>(\n    historicalDaysRange[\"1D\"],\n  );\n\n  return (\n    <PriceActionWrapper>\n      <CryptoAssetInfo assetId={id} />\n      <ChartTimeRangeSelection\n        selectedDayRange={selectedDayRange}\n        onSelectionChanged={setDayRange}\n      />\n      <HistoricalPriceChart assetId={id} selectedDayRange={selectedDayRange} />\n      <CyrptoAssetFullDetails assetId={id} />\n    </PriceActionWrapper>\n  );\n};\n\nexport default PriceAction;\n"],"names":["MainSubContentPlaceholder","props","_jsx","MainSubContentWrapper","className","children","showContent","_jsxs","_Fragment","TextPlaceHolder","height","width","ContentPlaceholder","_ref","count","placeholders","Array","fill","map","_","index","_createElement","key","CyrptoAssetFullDetails","getAsset","asset","error","status","useAssetDetailsService","assetId","loading","StateFetchStatus","Busy","useEffect","DetailsWrapper","DetailsRow","formatPrice","price","marketCap","rank","totalVolume","low24h","high24h","allTimeHigh","allTimeHighDate","parseDateString","fullyDilutedValuation","formatQuantity","circulatingSupply","maxSupply","lastUpdated","DATETIME_FORMAT","Wrapper","styled","ContentWrapper","withConfig","displayName","componentId","AssetNameWrapper","div","theme","fontSize","h4","_ref2","CryptoAssetInfo","assets","useAppSelector","state","_state$assets","list","assetsStatus","_state$assets2","usePricesFeed","get","maxColumnSize","minColumnSize","src","image","alt","name","PlaceHolder","size","borderRadius","symbol","toUpperCase","PercentChange","color","getColorFromSign","priceChangePercent24h","formatPercent","PriceActionWrapper","TimeRangeSelectionWrapper","ul","colors","border","TimeRangeSelectionItem","li","opacityMuted","_ref3","primary","_ref4","historicalDaysRange","ALL","ChartTimeRangeSelection","typedObjectEntries","intervalLabel","intervalValue","onClick","onSelectionChanged","selectedDayRange","undefined","screenSizes","Object","values","subscribeToMediaQueries$","mediaQueries$","query","mediaQuery","window","matchMedia","fromEventPattern","handler","addEventListener","removeEventListener","pipe","matches","media","screenSize","getScreenSizeFromMediaQuery","matchingScreenSize","numericScreenSize","getNumericScreenSize","subscribeToMediaQuery$","merge","_query$match","match","_screenSize$match","getSafeNumber","tabletSize","tablet","useMediaQueryMatch","targetSize","arguments","length","isActive","setIsActive","useState","innerWidth","onMediaMatch","useCallback","isDefined","mediaQueryMatch","isMediaQueryActive","onMediaQueryChange","subscription","subscribe","unsubscribe","ChartErrorMessage","MainChartWrapper","fontOnBackground","ToolTipWrapper","BaseWrapper","secondaryDark","bodyXSmall","_ref5","Chart","domain","useMemo","getSafeMinMax","chartData","dataKey","hideAxis","ResponsiveContainer","aspect","AreaChart","data","margin","top","right","bottom","left","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","primaryLight","XAxis","xAxisDataKey","tickFormatter","xAxisLabelFormatter","tickLine","axisLine","stroke","opacity","opacityDisabled","YAxis","type","valueFormatter","hide","Tooltip","labelFormatter","toolTipLabelFormatter","label","payload","value","_value$payload","formatDateTime","content","CustomTooltip","formatter","Area","_props$labelFormatter","_props$payload","_props$payload$","_props$formatter","_props$payload$0$name","active","call","MemoizedChart","React","HistoricalPriceChart","assetPriceHistory","getHistoricalData","isBusy","setError","setAssetPriceHistory","Map","setRequest","useService","AssetsService","getHistoricalPriceData","onResponse","response","set","days","historicalPriceData","onError","err","errorMessage","console","request","vs_currency","DEFAULT_CURRENCY","useHistoricalPrice","time","formatDayTime","formatDate","LoadingSpinner","PriceAction","useParams","setDayRange"],"sourceRoot":""}