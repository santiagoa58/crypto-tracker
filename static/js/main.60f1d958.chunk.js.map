{"version":3,"sources":["services/connection/AjaxConnection.ts","utils/isDefined.ts","utils/safeGetters.ts","utils/formatters.ts","utils/columnDefinitions.ts","components/grid/styled.ts","components/grid/Grid.tsx","components/crypto_assets/CryptoNameCell.tsx","services/connection/connectionHelpers.ts","utils/parseJson.ts","services/crypto_assets/AssetsService.ts","components/crypto_assets/hooks/useAssetsService.ts","components/crypto_assets/CryptoAssetsGrid.tsx","logo.svg","components/header/Logo.tsx","components/header/NavigationHeader.tsx","theme/theme.ts","App.tsx","index.tsx"],"names":["RequestMethod","isDefined","val","undefined","getSafeNumber","value","number","parseFloat","Number","isFinite","isNumber","getSafeString","String","formatNumber","options","locale","Intl","NumberFormat","format","safelyFormatNumber","num","formatPrice","price","decimalPlaces","style","currency","maximumFractionDigits","minimumFractionDigits","stringCompare","valueA","valueB","localeCompare","numeric","numericColDef","type","comparator","priceColDef","valueFormatter","integerPriceColDef","percentColDef","percentA","percentB","percent","formatPercent","cellClassRules","params","quantityColDef","defaultColDefs","resizable","floatingFilter","sortable","icons","sortAscending","sortDescending","GridWrapper","css","styled","div","theme","colors","secondaryDark","fontOnBackground","backgroundLight","backgroundLightMuted","focus","border","secondary","red","green","fontSize","body","Grid","columnDefs","props","children","className","suppressDragLeaveHidesColumns","immutableData","defaultColDef","map","colDef","colId","NameCellWrapper","bodyXSmall","opacityMuted","parseStringParams","Object","entries","reduce","stringParams","field","getInitRequest","method","request","headers","Headers","set","POST","JSON","stringify","err","jsonToString","getRequestParams","endpoint","url","process","encodeURI","parseUrl","initRequest","AjaxConnection","GET","fromFetch","pipe","switchMap","response","ok","json","Error","statusText","ASSETS_PATH","AssetsService","assets","data","EMPTY_ASSETS","assetColDefs","headerName","width","valueGetter","symbol","name","cellRendererFramework","toLowerCase","AssetGridWrapper","boxShadow","getRowNodeId","row","id","CryptoAssetsGrid","cryptos","search","useState","setCryptos","useEffect","subscription","subscribe","next","nextValue","complete","unsubscribe","error","console","useAssetsService","rowData","LogoWrapper","img","Logo","src","logo","alt","NavBarWrapper","backgroundDark","NavButton","button","opacityDisabled","primaryLight","NavBar","nav","NavigationHeader","background","backgroundMuted","fontOnBackgroundLight","fontOnBackgroundDark","fontOnPrimary","fontOnPrimaryLight","fontOnPrimaryDark","primary","primaryDark","secondaryLight","borderRadius","h1","h2","h3","h4","h5","h6","bodySmall","AppWrapper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60f1d958.chunk.js","sourcesContent":["import { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { getRequestParams } from \"./connectionHelpers\";\n\nexport enum RequestMethod {\n  GET = \"GET\",\n  POST = \"POST\",\n}\n\nexport const AjaxConnection = <Request, Response>(\n  endpoint: string,\n  request: Request,\n  method: RequestMethod = RequestMethod.GET,\n): Observable<Response> => {\n  const { url, initRequest } = getRequestParams(endpoint, request, method);\n  return fromFetch(url, initRequest).pipe(\n    switchMap((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(`got non-ok response: ${response.statusText}`);\n    }),\n  );\n};\n","export const isDefined = <T>(\n  val: T | null | undefined,\n): val is NonNullable<T> => val !== null && val !== undefined;\n\nexport const isNumber = (value: any): value is number =>\n  isDefined(value) && typeof value === \"number\" && Number.isFinite(value);\n","import { isDefined, isNumber } from \"./isDefined\";\n\nexport const getSafeNumber = (value: any): number | undefined => {\n  const number = parseFloat(`${value}`);\n  if (isNumber(number)) {\n    return number;\n  }\n\n  return undefined;\n};\n\nexport const getSafeString = (value?: string | number): string => {\n  if (isDefined(value)) {\n    return typeof value === \"string\" ? value : String(value);\n  }\n\n  return \"\";\n};\n","import { isDefined } from \"./isDefined\";\nimport { getSafeNumber } from \"./safeGetters\";\n\nconst formatNumber = (\n  value: number,\n  options: Intl.NumberFormatOptions | undefined,\n  locale = \"en-US\",\n): string => Intl.NumberFormat(locale, options).format(value);\n\nconst safelyFormatNumber = (\n  value: string | number | undefined,\n  options?: Intl.NumberFormatOptions,\n): string => {\n  const num = getSafeNumber(value);\n  if (isDefined(num)) {\n    return formatNumber(num, options);\n  }\n\n  return \"\";\n};\n\nexport const formatPrice = (\n  price?: string | number,\n  decimalPlaces = 2,\n): string =>\n  safelyFormatNumber(price, {\n    style: \"currency\",\n    currency: \"USD\",\n    maximumFractionDigits: decimalPlaces,\n    minimumFractionDigits: decimalPlaces,\n  });\n\nexport const formatIntegerPrice = (price?: string | number) =>\n  formatPrice(price, 0);\n\nexport const formatPercent = (percent?: string | number) => {\n  const value = getSafeNumber(percent);\n  if (isDefined(value)) {\n    return formatNumber(value / 100, {\n      style: \"percent\",\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n  }\n};\n\nexport const formatQuantity = (quantity?: string | number) =>\n  safelyFormatNumber(quantity);\n","import { ColDef } from \"ag-grid-community\";\nimport {\n  formatIntegerPrice,\n  formatPercent,\n  formatPrice,\n  formatQuantity,\n} from \"./formatters\";\nimport { isDefined } from \"./isDefined\";\nimport { getSafeNumber, getSafeString } from \"./safeGetters\";\n\nexport const stringCompare = (valueA?: string, valueB?: string) => {\n  return getSafeString(valueA).localeCompare(getSafeString(valueB), \"en\", {\n    numeric: true,\n  });\n};\n\nexport const percentComparator = (valueA: any, valueB: any) => {\n  const percentA = getSafeNumber(valueA);\n  const percentB = getSafeNumber(valueB);\n\n  if (!isDefined(percentA)) {\n    return -1;\n  }\n\n  if (!isDefined(percentB)) {\n    return 1;\n  }\n\n  return percentA - percentB;\n};\n\nexport const numericColDef: ColDef = {\n  type: \"numericColumn\",\n  comparator: stringCompare,\n};\n\nexport const priceColDef: ColDef = {\n  ...numericColDef,\n  valueFormatter({ value }) {\n    return formatPrice(value) || \"-\";\n  },\n};\n\nexport const integerPriceColDef: ColDef = {\n  ...priceColDef,\n  valueFormatter({ value }) {\n    return formatIntegerPrice(value) || \"-\";\n  },\n};\n\nexport const percentColDef: ColDef = {\n  ...numericColDef,\n  comparator: percentComparator,\n  valueFormatter({ value }) {\n    return formatPercent(value) || \"-\";\n  },\n  cellClassRules: {\n    \"negative-value \": (params: { value?: string }) =>\n      (getSafeNumber(params.value) ?? 0) < 0,\n    \"positive-value \": (params: { value?: string }) =>\n      (getSafeNumber(params.value) ?? 0) > 0,\n  },\n};\n\nexport const quantityColDef: ColDef = {\n  ...numericColDef,\n  valueFormatter({ value }) {\n    return formatQuantity(value) || \"-\";\n  },\n};\n\nexport const defaultColDefs: ColDef = {\n  resizable: true,\n  floatingFilter: false,\n  sortable: true,\n  icons: {\n    sortAscending: '<span class=\"material-icons\">arrow_upward</span>',\n    sortDescending: '<span class=\"material-icons\">arrow_downward</span>',\n  },\n};\n","import styled, { css } from \"styled-components/macro\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\n\nexport const textEllipsisStyle = css`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const GridWrapper = styled.div`\n  height: 100%;\n\n  //GLOBAL\n  .ag-root-wrapper {\n    background-color: ${({ theme }) => theme.colors.secondaryDark};\n    color: ${({ theme }) => theme.colors.fontOnBackground};\n  }\n\n  .ag-right-aligned-cell {\n    text-align: right;\n  }\n\n  .ag-left-aligned-cell {\n    text-align: left;\n  }\n\n  .ag-body-viewport,\n  .ag-body-horizontal-scroll-viewport {\n    &::-webkit-scrollbar-track {\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n      border-radius: 0.75rem;\n      background-color: rgba(0, 0, 0, 0.9);\n    }\n\n    &::-webkit-scrollbar {\n      width: 0.875rem;\n      height: auto;\n      background-color: rgba(0, 0, 0, 0.9);\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 0.75rem;\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n      background-color: #484848;\n    }\n  }\n\n  //HEADER\n  .ag-header {\n    border-bottom: solid 1px ${({ theme }) => theme.colors.backgroundLight};\n    background-color: ${({ theme }) => theme.colors.backgroundLightMuted};\n  }\n\n  .ag-header-row {\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n\n  .ag-header-cell,\n  .ag-cell {\n    padding-left: 1rem;\n    padding-right: 1rem;\n\n    &:focus {\n      border: solid 1px ${({ theme }) => theme.colors.focus};\n      outline: none;\n    }\n  }\n\n  .ag-header-cell {\n    &-resize {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &::after {\n        content: \"\";\n        width: 2px;\n        height: 50%;\n        background-color: ${({ theme }) => theme.colors.border};\n      }\n    }\n  }\n\n  //ROW\n  .ag-row {\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary};\n    }\n  }\n\n  //CELL\n  .ag-cell {\n    line-height: 40px; //Default row height used to center text vertically\n\n    &.negative-value {\n      color: ${({ theme }) => theme.colors.red};\n    }\n    &.positive-value {\n      color: ${({ theme }) => theme.colors.green};\n    }\n  }\n\n  //ICONS\n  .ag-icon,\n  .ag-header-icon {\n    .material-icons {\n      font-size: ${({ theme }) => theme.fontSize.body};\n    }\n  }\n`;\n","import React, { PropsWithChildren } from \"react\";\nimport { AgGridReact, AgGridColumn } from \"ag-grid-react\";\nimport { ColDef, GridOptions } from \"ag-grid-community\";\nimport { defaultColDefs } from \"../../utils/columnDefinitions\";\nimport { GridWrapper } from \"./styled\";\n\nexport interface ColumnDefinition extends ColDef {\n  colId: string;\n}\n\ninterface GridProps<T> extends GridOptions {\n  rowData: T[];\n  columnDefs: ColumnDefinition[];\n}\n\nexport const Grid = <T extends Record<string, any>>({\n  columnDefs,\n  children,\n  ...props\n}: PropsWithChildren<GridProps<T>>) => {\n  return (\n    <GridWrapper className=\"ag-theme-alpine-dark\">\n      <AgGridReact\n        suppressDragLeaveHidesColumns={true}\n        immutableData={true}\n        defaultColDef={defaultColDefs}\n        {...props}\n      >\n        {columnDefs.map((colDef) => (\n          <AgGridColumn key={colDef.colId} {...colDef} />\n        ))}\n      </AgGridReact>\n    </GridWrapper>\n  );\n};\n","import { ICellRendererParams } from \"ag-grid-community\";\nimport { FC } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { CryptoAsset } from \"../../services/crypto_assets/AssetsServiceInterface\";\n\nexport type CryptoNameValue = Pick<CryptoAsset, \"symbol\" | \"name\">;\ninterface CryptoNameCellProps extends ICellRendererParams {\n  value: CryptoNameValue;\n}\nconst NameCellWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n\n  .crypto-name {\n    &__wrapper {\n      display: flex;\n      flex-direction: column;\n      line-height: 1.5;\n      padding-left: 0.6rem;\n    }\n    &--sub {\n      font-size: ${({ theme }) => theme.fontSize.bodyXSmall};\n      opacity: ${({ theme }) => theme.opacityMuted};\n    }\n  }\n`;\n\nexport const CryptoNameCell: FC<CryptoNameCellProps> = (props) => {\n  return (\n    <NameCellWrapper>\n      <i className={`cf cf-${props.value.symbol.toLowerCase()}`}></i>\n      <div className=\"crypto-name__wrapper\">\n        <span className=\"crypto-name--main\">{props.value.name}</span>\n        <span className=\"crypto-name--sub\">{props.value.symbol}</span>\n      </div>\n    </NameCellWrapper>\n  );\n};\n","import { isDefined } from \"../../utils/isDefined\";\nimport { jsonToString } from \"../../utils/parseJson\";\nimport { RequestMethod } from \"./AjaxConnection\";\n\nconst api = process.env.REACT_APP_API_URL;\n\nconst objectEntriesToStringParams = (entries: Array<[string, unknown]>) =>\n  entries.reduce((stringParams, [field, value]) => {\n    if (isDefined(value)) {\n      return `${stringParams ? `${stringParams}&` : \"\"}${field}=${value}`;\n    }\n    return stringParams;\n  }, \"\");\n\nconst parseStringParams = (params: any): string => {\n  if (!params) {\n    return \"\";\n  }\n\n  if (typeof params === \"object\") {\n    return objectEntriesToStringParams(Object.entries(params));\n  }\n\n  return `${params}`;\n};\n\nconst parseUrl = (endpoint: string, params?: any) => {\n  const url = `${api}${endpoint}`;\n  if (isDefined(params)) {\n    const stringParams = parseStringParams(params);\n    return encodeURI(`${url}?${stringParams}`);\n  }\n  return encodeURI(url);\n};\n\nconst getInitRequest = (method: RequestMethod, request: any): RequestInit => {\n  const headers = new Headers();\n  headers.set(\"Content-Type\", \"application/json\");\n\n  let body = undefined;\n\n  if (method === RequestMethod.POST) {\n    body = jsonToString(request);\n  }\n\n  return {\n    headers,\n    method,\n    body,\n  };\n};\n\nexport const getRequestParams = (\n  endpoint: string,\n  request: any,\n  method: RequestMethod,\n) => {\n  const url = parseUrl(endpoint, request);\n  const initRequest = getInitRequest(method, request);\n\n  return {\n    url,\n    initRequest,\n  };\n};\n","import { isDefined } from \"./isDefined\";\n\nexport const jsonToString = (val: any): string | undefined => {\n  if (!isDefined(val)) {\n    return undefined;\n  }\n\n  try {\n    return JSON.stringify(val);\n  } catch (err) {\n    return undefined;\n  }\n};\n","import { AjaxConnection } from \"../connection/AjaxConnection\";\nimport {\n  AssetsServiceInterface,\n  CryptoAsset,\n  GetCryptoAssetsRequest,\n} from \"./AssetsServiceInterface\";\nimport { map } from \"rxjs/operators\";\n\nconst ASSETS_PATH = \"/assets/\";\n\ninterface ServerGetAssetsResponse {\n  data: Array<CryptoAsset>;\n}\n\nexport const AssetsService: AssetsServiceInterface = {\n  getCryptoAsset: (request = {}) =>\n    AjaxConnection<GetCryptoAssetsRequest, ServerGetAssetsResponse>(\n      `${ASSETS_PATH}`,\n      request,\n    ).pipe(map((response) => ({ assets: response.data }))),\n};\n","import { useState, useEffect } from \"react\";\nimport { AssetsService } from \"../../../services/crypto_assets/AssetsService\";\nimport { CryptoAsset } from \"../../../services/crypto_assets/AssetsServiceInterface\";\n\nconst EMPTY_ASSETS: CryptoAsset[] = [];\n\nexport const useAssetsService = (search?: string): Array<CryptoAsset> => {\n  const [cryptos, setCryptos] = useState<Array<CryptoAsset>>();\n\n  useEffect(() => {\n    const subscription = AssetsService.getCryptoAsset({\n      search,\n    }).subscribe({\n      next(nextValue) {\n        setCryptos(nextValue.assets);\n      },\n      complete() {\n        subscription.unsubscribe();\n      },\n      error(error) {\n        console.error(error);\n      },\n    });\n\n    return () => {\n      subscription?.unsubscribe();\n    };\n  }, [search]);\n\n  return cryptos ?? EMPTY_ASSETS;\n};\n","import React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { CryptoAsset } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport {\n  integerPriceColDef,\n  percentColDef,\n  priceColDef,\n  quantityColDef,\n  numericColDef,\n  stringCompare,\n} from \"../../utils/columnDefinitions\";\nimport { ColumnDefinition, Grid } from \"../grid/Grid\";\nimport { CryptoNameCell, CryptoNameValue } from \"./CryptoNameCell\";\nimport { useAssetsService } from \"./hooks/useAssetsService\";\n\nconst assetColDefs: ColumnDefinition[] = [\n  {\n    ...numericColDef,\n    field: \"rank\",\n    colId: \"rank\",\n    headerName: \"RANK\",\n    width: 100,\n  },\n  {\n    field: \"name\",\n    colId: \"name\",\n    headerName: \"ASSET NAME\",\n    valueGetter: ({ data }: { data: CryptoAsset }): CryptoNameValue => ({\n      symbol: data.symbol,\n      name: data.name,\n    }),\n    comparator: (valueA: CryptoNameValue, valueB: CryptoNameValue) =>\n      stringCompare(valueA.name, valueB.name),\n    cellRendererFramework: CryptoNameCell,\n  },\n  {\n    ...priceColDef,\n    width: 150,\n    field: \"priceUsd\",\n    colId: \"priceUsd\",\n    headerName: \"PRICE\",\n  },\n  {\n    ...percentColDef,\n    width: 150,\n    field: \"changePercent24Hr\",\n    colId: \"changePercent24Hr\",\n    headerName: \"CHANGE (24HR)\",\n  },\n  {\n    ...integerPriceColDef,\n    field: \"volumeUsd24Hr\",\n    colId: \"volumeUsd24Hr\",\n    headerName: \"VOLUME (24HR)\",\n  },\n  {\n    ...integerPriceColDef,\n    field: \"marketCapUsd\",\n    colId: \"marketCapUsd\",\n    headerName: \"MARKET CAP\",\n  },\n  {\n    ...quantityColDef,\n    field: \"supply\",\n    colId: \"supply\",\n    headerName: \"SUPPLY\",\n  },\n  {\n    ...quantityColDef,\n    field: \"maxSupply\",\n    colId: \"maxSupply\",\n    headerName: \"MAX SUPPLY\",\n  },\n];\n\nconst AssetGridWrapper = styled.div`\n  height: 70vh;\n  width: 80%;\n  margin: 0 auto;\n  overflow: hidden;\n  border-radius: 2px;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  //elevation in dark theme\n  filter: brightness(1.08);\n`;\n\nconst getRowNodeId = (row: CryptoAsset) => row.id;\nexport const CryptoAssetsGrid: FC = (props) => {\n  const cryptos = useAssetsService();\n  return (\n    <AssetGridWrapper>\n      <Grid\n        rowData={cryptos}\n        columnDefs={assetColDefs}\n        getRowNodeId={getRowNodeId}\n      />\n      {props.children}\n    </AssetGridWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.8ddc634a.svg\";","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport logo from \"../../logo.svg\";\n\nexport const LogoWrapper = styled.img`\n  height: 2rem;\n`;\n\nexport const Logo = () => {\n  return <LogoWrapper src={logo} alt=\"logo\" />;\n};\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { Logo, LogoWrapper } from \"./Logo\";\n\nconst NavBarWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: center;\n\n  padding: 1rem;\n  padding-bottom: 0rem;\n\n  border-bottom: solid 1px ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.backgroundDark};\n\n  ${LogoWrapper} {\n    margin-bottom: 0.75rem;\n  }\n`;\n\nconst NavButton = styled.button`\n  background-color: transparent;\n  outline: none;\n  border: none;\n  padding: 0.3rem 0.75rem;\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n  opacity: ${({ theme }) => theme.opacityMuted};\n  white-space: nowrap;\n  transition: all 200ms;\n\n  &:disabled {\n    opacity: ${({ theme }) => theme.opacityDisabled};\n  }\n\n  &:enabled:focus,\n  &:enabled:hover {\n    opacity: 1;\n    border-bottom: solid 1px ${({ theme }) => theme.colors.primaryLight};\n    cursor: pointer;\n  }\n`;\n\nconst NavBar = styled.nav`\n  display: flex;\n  justify-content: center;\n  height: 100%;\n\n  ${NavButton} {\n    padding-bottom: 0.75rem;\n    &:not(:first-child) {\n      margin-left: 0.75rem;\n    }\n  }\n`;\n\nexport const NavigationHeader = () => {\n  return (\n    <NavBarWrapper>\n      <Logo />\n      <NavBar>\n        <NavButton type=\"button\">Overview</NavButton>\n        <NavButton type=\"button\">Price Action</NavButton>\n      </NavBar>\n    </NavBarWrapper>\n  );\n};\n","//https://www.material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=37474F&secondary.color=efb90b\n\nexport interface Theme {\n  colors: {\n    background: string;\n    backgroundMuted: string;\n    backgroundLight: string;\n    backgroundLightMuted: string;\n    backgroundDark: string;\n    primary: string;\n    primaryLight: string;\n    primaryDark: string;\n    secondary: string;\n    secondaryLight: string;\n    secondaryDark: string;\n    fontOnBackground: string;\n    fontOnBackgroundLight: string;\n    fontOnBackgroundDark: string;\n    fontOnPrimary: string;\n    fontOnPrimaryLight: string;\n    fontOnPrimaryDark: string;\n    focus: string;\n    border: string;\n    red: string;\n    green: string;\n  };\n\n  borderRadius: string;\n  opacityMuted: number;\n  opacityDisabled: number;\n  boxShadow: string;\n  fontSize: {\n    h1: string;\n    h2: string;\n    h3: string;\n    h4: string;\n    h5: string;\n    h6: string;\n    body: string;\n    bodySmall: string;\n    bodyXSmall: string;\n  };\n}\n\nexport const theme: Theme = {\n  colors: {\n    background: \"#212121\",\n    backgroundLight: \"#484848\",\n    backgroundDark: \"#121212\",\n    backgroundMuted: \"rgba(33,33,33,0.3)\",\n    backgroundLightMuted: \"rgba(72,72,72, 0.3)\",\n    fontOnBackground: \"rgba(238,238,238)\",\n    fontOnBackgroundLight: \"rgba(238,238,238)\",\n    fontOnBackgroundDark: \"rgba(238,238,238)\",\n    fontOnPrimary: \"rgba(255,255,255)\",\n    fontOnPrimaryLight: \"rgb(0,0,0)\",\n    fontOnPrimaryDark: \"rgb(255,255,255)\",\n    primary: \"#f0b90b\",\n    primaryLight: \"#ffeb50\",\n    primaryDark: \"#b98900\",\n    secondary: \"#37474f\",\n    secondaryLight: \"#62717b\",\n    secondaryDark: \"#101f27\",\n    focus: \"#80bdff\",\n    border: \"#5c5c5d\",\n    red: \"#f75a6e\",\n    green: \"#73e1b6\",\n  },\n  borderRadius: \"3px\",\n  opacityMuted: 0.7,\n  opacityDisabled: 0.45,\n  boxShadow: \"rgba(0,0,0,0.12) 0px 3px 4px 0px\",\n  fontSize: {\n    h1: \"6rem\",\n    h2: \"3.75rem\",\n    h3: \"3rem\",\n    h4: \"2.125rem\",\n    h5: \"1.5rem\",\n    h6: \"1.25rem\",\n    body: \"1rem\",\n    bodySmall: \"0.875rem\",\n    bodyXSmall: \"0.75rem\",\n  },\n};\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components/macro\";\nimport \"./App.css\";\nimport { CryptoAssetsGrid } from \"./components/crypto_assets/CryptoAssetsGrid\";\nimport { NavigationHeader } from \"./components/header/NavigationHeader\";\nimport { theme } from \"./theme/theme\";\n\nconst AppWrapper = styled.div`\n  max-width: 1920px;\n  min-width: 360px;\n  margin: 0 auto;\n  height: 100%;\n  overflow: auto;\n  font-size: ${({ theme }) => theme.fontSize.bodySmall};\n  background: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n\n  main {\n    padding: 1rem 0;\n  }\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppWrapper>\n        <NavigationHeader />\n        <main>\n          <CryptoAssetsGrid />\n        </main>\n      </AppWrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}