{"version":3,"sources":["utils/isDefined.ts","components/market-metrics/state/MarketMetricsActions.ts","utils/routes/paths.ts","components/search/SearchSelect.tsx","components/search/AssetSearch.tsx","utils/hooks/useAllCoinsService.ts","logo.svg","components/header/Logo.tsx","components/header/NavLink.tsx","components/header/NavigationHeader.tsx","utils/columnDefinitions.ts","components/grid/styled.ts","components/grid/GridRowsOverlay.tsx","components/grid/Grid.tsx","components/crypto-assets/CryptoNameCell.tsx","components/crypto-assets/cryptoAssetsColDefs.ts","components/crypto-assets/CryptoAssetsGrid.tsx","components/market-metrics/useMarketMetrics.ts","components/market-metrics/MarketMetrics.tsx","components/overview/MarketOverview.tsx","components/AppRouter.tsx","components/crypto-assets/state/allCoinsReducer.ts","utils/arrayToMap.ts","components/crypto-assets/state/assetsReducer.ts","components/market-metrics/state/marketMetricsReducer.ts","redux/appReducer.ts","redux/middlewares/logger.ts","redux/store.ts","redux/configureStore.ts","App.tsx","index.tsx","components/crypto-assets/state/AssetActions.ts","utils/safeGetters.ts","redux/AppState.ts","utils/formatters.ts","utils/constants.ts","redux/useAppSelector.ts","utils/hooks/ServiceActions.ts","utils/hooks/useService.ts","components/ContentWrappers.tsx","services/connection/AjaxConnection.ts","services/crypto_assets/AssetsService.ts","services/connection/apis.ts","components/LoadingSpinner.tsx","services/connection/connectionHelpers.ts","utils/parseJson.ts","theme/theme.ts","components/crypto-assets/styled.tsx","components/placeholders/styled.ts","components/crypto-assets/useAssetsService.ts","utils/typedObjectEntries.ts","utils/retryConnection.ts","services/feeds/FeedService.ts","services/connection/websocketConnection.ts","utils/hooks/useFeedService.ts"],"names":["isDefined","val","undefined","isNumber","value","Number","isFinite","MarketMetricsActionTypes","PRICE_ACTION_PATH","Option","styled","li","theme","colors","secondary","isSelected","secondaryLight","OptionsWrapper","ul","secondaryDark","boxShadow","borderRadius","SearchSelectWrapper","div","fontOnBackground","backgroundMuted","fontOnBackgroundLight","focus","SearchSelect","options","filterOptions","props","useState","searchValue","setSearchValue","selectedIndex","setSelectedIndex","showResult","setShowResult","filteredOptions","useMemo","filter","option","slice","SearchInputRef","useRef","selectOption","onOptionSelect","current","blur","onKeyDown","event","key","stopPropagation","preventDefault","getSafeIndex","length","prevIndex","type","ref","placeholder","onFocus","onBlur","onChange","newValue","target","map","index","onMouseDown","onClick","label","String","AssetSearch","history","useHistory","allCoins","useAppSelector","state","dispatch","useDispatch","setCoinsList","useCallback","AssetActionTypes","GET_ALL_COINS_SUCCESS","payload","setCoinsListFailure","error","GET_ALL_COINS_FAILURE","useService","AssetsService","getAllCoins","onResponse","onError","err","console","setRequest","getCoinsList","GET_ALL_COINS_REQUEST","useEffect","useAllCoinsService","list","crypto","id","name","meta","sort","optionA","optionB","localeCompare","numeric","cryptoId","push","searchTerm","toLowerCase","cryptoName","symbol","startsWith","LogoWrapper","img","Logo","src","logo","alt","NavItemWrapper","opacityMuted","primaryLight","NavLink","className","useRouteMatch","path","to","exact","children","NavBarWrapper","border","backgroundDark","screenSizes","mobileL","NavBar","nav","NavigationHeader","numericColDef","comparator","valueA","valueB","minWidth","priceColDef","valueFormatter","formatPrice","integerPriceColDef","formatIntegerPrice","percentColDef","percentA","getSafeNumber","percentB","formatPercent","cellClassRules","params","quantityColDef","formatQuantity","defaultColDefs","resizable","floatingFilter","sortable","suppressMovable","icons","sortAscending","sortDescending","first","previous","next","last","GridWrapper","css","backgroundLight","backgroundLightMuted","red","green","fontSize","body","MessageWrapper","span","NoRowsOverlay","isLoading","LoadingSpinner","noRowsMessage","Grid","columnDefs","loading","suppressDragLeaveHidesColumns","immutableData","defaultColDef","noRowsOverlayComponentFramework","noRowsOverlayComponentParams","colDef","colId","NameCellWrapper","CryptoNameCell","forwardRef","useImperativeHandle","refresh","image","assetColDefs","width","field","headerName","initialSort","valueGetter","data","getSafeString","stringCompare","cellRendererFramework","AssetGridWrapper","BaseWrapper","getRowNodeId","row","CryptoAssetsGrid","useAssetsService","assets","status","getAssets","usePricesFeed","per_page","page","vs_currency","DEFAULT_CURRENCY","rowData","valueSeq","toArray","StateFetchStatus","Busy","onRowClicked","MarketMetricsWrapper","ContentWrapper","MarketMetrics","marketMetrics","marketMetricsState","getGlobalMarketData","response","GET_GLOBAL_METRICS_SUCCESS","GET_GLOBAL_METRICS_FAILURE","getMarketMetrics","GET_GLOBAL_METRICS_REQUEST","useMarketMetrics","percentChangeUsd","marketCapChangePercentage24hUsd","totalMarketCap","totalMarketCapUsd","bitcoinDominance","marketCapPercentage","maxColumnSize","minColumnSize","color","getColorFromSign","MarketOverview","PriceAction","React","lazy","AppRouter","fallback","pathname","DEFAULT_ASSET_ID","initialState","Idle","arrayToMap","array","Map","initalState","OrderedMap","initialMarketMetricsState","appReducer","combineReducers","action","GET_ASSETS_REQUEST","GET_ASSETS_SUCCESS","merge","GET_ASSETS_FAILURE","Failure","UPDATE_ASSET","update","prev","removeUndefinedEntries","logger","storeAPI","info","store","enhancer","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","AppWrapper","desktop","mobileS","bodySmall","background","App","ReactDOM","render","StrictMode","document","getElementById","number","parseFloat","getNumericValue","getSafeMinMax","values","numericValues","max","Math","min","getSafeDate","date","Date","e","nextIndex","DEFAULT_LOCALE","TIME_FORMAT","DATE_FORMAT","DAY_TIME_FORMAT","DATETIME_FORMAT","formatNumber","locale","Intl","NumberFormat","format","safelyFormatNumber","num","isGreaterThan","valA","valB","price","decimalPlaces","style","currency","toUpperCase","minimumFractionDigits","maximumSignificantDigits","percent","maximumFractionDigits","quantity","safeDateFormat","timestamp","formatTemplate","milliseconds","formatDate","formatDateTime","formatDayTime","parseDateString","safeDate","useSelector","UseServiceActionsTypes","initialServiceState","serviceReducer","FETCH_REQUEST","request","RESET","service","handlers","useReducer","serviceState","handlersRef","subscription","subscribe","nextValue","complete","unsubscribe","MainSubContentWrapper","bodyXSmall","h6","GridContentWrapper","columns","RequestMethod","AjaxConnection","endpoint","method","GET","getRequestParams","url","initRequest","fromFetch","pipe","switchMap","ok","json","Error","ASSETS_PATH","assetsApi","MARKET_METRICS_PATH","include_platform","getCryptoAssets","asset","current_price","marketCap","market_cap","rank","market_cap_rank","fullyDilutedValuation","fully_diluted_valuation","totalVolume","total_volume","high24h","high_24h","low24h","low_24h","priceChange24h","price_change_24h","priceChangePercent24h","price_change_percentage_24h","priceChangePercent1h","price_change_percentage_1h_in_currency","marketCapChange24h","market_cap_change_24h","marketCapChangePercent24h","market_cap_change_percentage_24h","circulatingSupply","circulating_supply","totalSupply","total_supply","maxSupply","max_supply","lastUpdated","last_updated","retry","total_market_cap","totalVolumeUsd","market_cap_percentage","market_cap_change_percentage_24h_usd","updatedAt","updated_at","getHistoricalPriceData","prices","historicalPriceData","time","days","getAssetDetails","small","market_data","usd","priceChangePercentage7d","price_change_percentage_7d","priceChangePercentage14d","price_change_percentage_14d","priceChangePercentage30d","price_change_percentage_30d","priceChangePercentage60d","price_change_percentage_60d","priceChangePercentage200d","price_change_percentage_200d","priceChangePercentage1y","price_change_percentage_1y","blockTimeInMinutes","block_time_in_minutes","categories","description","en","homepageLink","links","homepage","find","Boolean","genesisDate","genesis_date","totalValueLocked","total_value_locked","mcapToTotalValueLockedRatio","mcap_to_tvl_ratio","allTimeHigh","ath","allTimeHighDate","ath_date","process","pricesStreamApi","SpinnerWrapper","Spinner","primary","parseStringParams","Array","isArray","Object","entries","reduce","stringParams","validRequest","getValidRequest","encodeURI","parseUrl","headers","Headers","set","POST","jsonToString","getInitRequest","JSON","stringify","parseJson","parse","fontOnBackgroundDark","fontOnPrimary","fontOnPrimaryLight","fontOnPrimaryDark","primaryDark","borderMuted","opacityDisabled","h1","h2","h3","h4","h5","mobileM","tablet","laptop","laptopL","PercentChange","DetailsWrapper","TextPlaceHolder","DetailsRow","BasePlaceHolder","PlaceHolder","size","height","assetsState","useAssetDetailsService","assetId","getAsset","get","typedObjectEntries","obj","validEntries","fromEntries","DEFAULT_ERROR_MESSAGE","PRICES_PATH","mapAssetPriceToPriceUpdate","priceUsd","FeedService","webSocket","deserializer","openObserver","closeObserver","closeEvent","warn","code","webSocketConnection","throttleTime","mergeMap","errorMessage","retryWhen","errors","tap","log","delay","retryConnection","keySeq","prevAssets","subscribeToFeed","stringAssets"],"mappings":"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","file":"static/js/main.8ec03fb5.chunk.js","sourcesContent":["export const isDefined = <T>(\n  val: T | null | undefined,\n): val is NonNullable<T> => val !== null && val !== undefined;\n\nexport const isNumber = (value: any): value is number =>\n  isDefined(value) && typeof value === \"number\" && Number.isFinite(value);\n","import { FluxStandardAction } from \"../../../redux/AppActions\";\nimport { GlobalMarketMetrics } from \"../../../services/crypto_assets/AssetsServiceInterface\";\n\nexport enum MarketMetricsActionTypes {\n  GET_GLOBAL_METRICS_REQUEST = \"GET_GLOBAL_METRICS_REQUEST\",\n  GET_GLOBAL_METRICS_SUCCESS = \"GET_GLOBAL_METRICS_SUCCESS\",\n  GET_GLOBAL_METRICS_FAILURE = \"GET_GLOBAL_METRICS_FAILURE\",\n}\n\ninterface GetGlobalMetricsRequestAction\n  extends FluxStandardAction<MarketMetricsActionTypes> {\n  type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_REQUEST;\n}\n\ninterface GetGlobalMetricsSuccessAction\n  extends FluxStandardAction<MarketMetricsActionTypes> {\n  type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_SUCCESS;\n  payload: GlobalMarketMetrics;\n}\n\ninterface GetGlobalMetricsFailureAction\n  extends FluxStandardAction<MarketMetricsActionTypes> {\n  type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_FAILURE;\n  payload: string;\n  error: boolean;\n}\n\nexport type MarketMetricActions =\n  | GetGlobalMetricsRequestAction\n  | GetGlobalMetricsSuccessAction\n  | GetGlobalMetricsFailureAction;\n","export const PRICE_ACTION_PATH = \"/price-action/\";\n","import React, { ReactNode, useMemo, useRef, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { getSafeIndex } from \"../../utils/safeGetters\";\n\nexport interface SearchOption<TValue, TMeta = any> {\n  value: TValue;\n  label: ReactNode;\n  meta?: TMeta;\n}\n\ninterface Props<TValue, TMeta> {\n  options: SearchOption<TValue, TMeta>[];\n  onOptionSelect(value: TValue): void;\n  filterOptions(\n    option: SearchOption<TValue, TMeta>,\n    searchText: string,\n  ): boolean;\n}\n\nconst Option = styled.li<{ isSelected?: boolean }>`\n  padding: 0.4rem 0.5rem;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n  }\n  ${({ isSelected, theme }) =>\n    isSelected && `background-color: ${theme.colors.secondaryLight};`}\n  overflow: auto;\n`;\n\nconst OptionsWrapper = styled.ul`\n  position: absolute;\n  left: 0;\n  right: 0;\n  list-style: none;\n  opacity: 1;\n  background-color: ${({ theme }) => theme.colors.secondaryDark};\n  border: solid 1px transparent;\n  box-shadow: ${({ theme }) => theme.boxShadow};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  padding: 0;\n  margin: 0;\n  top: 100%;\n  margin-top: 0.25rem;\n  z-index: 20;\n  overflow: hidden;\n`;\n\nexport const SearchSelectWrapper = styled.div`\n  display: flex;\n  max-width: 20rem;\n  min-width: 6rem;\n  position: relative;\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n\n  input {\n    border: solid 1px transparent;\n    background-color: ${({ theme }) => theme.colors.backgroundMuted};\n    box-shadow: ${({ theme }) => theme.boxShadow};\n    border-radius: ${({ theme }) => theme.borderRadius};\n    padding: 0.5rem;\n    width: 100%;\n    color: ${({ theme }) => theme.colors.fontOnBackgroundLight};\n\n    &:focus {\n      border-color: ${({ theme }) => theme.colors.focus};\n      outline: none;\n    }\n  }\n`;\n\nconst MAX_RESULTS = 5;\n\nexport const SearchSelect = <TValue, TMeta = any>({\n  options,\n  filterOptions,\n  ...props\n}: Props<TValue, TMeta>) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n\n  const filteredOptions = useMemo(\n    () =>\n      options\n        .filter((option) => filterOptions(option, searchValue))\n        .slice(0, MAX_RESULTS),\n    [options, filterOptions, searchValue],\n  );\n\n  const SearchInputRef = useRef<HTMLInputElement | null>(null);\n\n  const selectOption = (value: TValue) => {\n    props.onOptionSelect(value);\n    setSearchValue(\"\");\n    SearchInputRef.current?.blur();\n  };\n\n  return (\n    <SearchSelectWrapper\n      onKeyDown={(event) => {\n        if (event.key === \"Enter\") {\n          event.stopPropagation();\n          event.preventDefault();\n          const option = filteredOptions[\n            getSafeIndex(selectedIndex, filteredOptions.length)\n          ] as SearchOption<TValue> | undefined;\n          if (option) {\n            return selectOption(option.value);\n          }\n        }\n        if (event.key === \"ArrowDown\") {\n          event.stopPropagation();\n          event.preventDefault();\n          setSelectedIndex((prevIndex) =>\n            getSafeIndex(++prevIndex, filteredOptions.length),\n          );\n        }\n        if (event.key === \"ArrowUp\") {\n          event.stopPropagation();\n          event.preventDefault();\n          setSelectedIndex((prevIndex) =>\n            getSafeIndex(--prevIndex, filteredOptions.length),\n          );\n        }\n      }}\n    >\n      <input\n        type=\"text\"\n        ref={SearchInputRef}\n        placeholder=\"Search\"\n        onFocus={() => {\n          if (searchValue.length >= 2) {\n            setShowResult(true);\n          }\n        }}\n        onBlur={(event) => {\n          setShowResult(false);\n          setSelectedIndex(0);\n        }}\n        value={searchValue}\n        onChange={(event) => {\n          const newValue = event.target.value;\n          setShowResult(newValue.length >= 2);\n          setSearchValue(newValue);\n        }}\n      />\n      {showResult && (\n        <OptionsWrapper>\n          {filteredOptions.length ? (\n            filteredOptions.map((option, index) => (\n              <Option\n                key={String(option.value)}\n                onMouseDown={(event) => {\n                  //prevent parent's onBlur from occurring before the option's onClick\n                  event.preventDefault();\n                }}\n                onClick={() => selectOption(option.value)}\n                isSelected={index === selectedIndex}\n              >\n                {option.label}\n              </Option>\n            ))\n          ) : (\n            <Option>No Results</Option>\n          )}\n        </OptionsWrapper>\n      )}\n    </SearchSelectWrapper>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { CryptoAssetIdentifier } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { useAllCoinsService } from \"../../utils/hooks/useAllCoinsService\";\nimport { PRICE_ACTION_PATH } from \"../../utils/routes/paths\";\nimport { SearchOption, SearchSelect } from \"./SearchSelect\";\n\nexport const AssetSearch = () => {\n  const history = useHistory();\n\n  const allCoins = useAllCoinsService();\n  const options = useMemo<SearchOption<string, CryptoAssetIdentifier>[]>(\n    () =>\n      allCoins.list\n        .map((crypto) => ({\n          value: crypto.id,\n          label: crypto.name,\n          meta: crypto,\n        }))\n        .sort((optionA, optionB) =>\n          optionA.label.localeCompare(optionB.label, undefined, {\n            numeric: true,\n          }),\n        ),\n    [allCoins.list],\n  );\n\n  return (\n    <SearchSelect\n      onOptionSelect={(cryptoId) => {\n        history.push(`${PRICE_ACTION_PATH}${cryptoId}`);\n      }}\n      options={options}\n      filterOptions={(option, searchValue) => {\n        const searchTerm = searchValue.toLowerCase();\n        const cryptoName = option.meta!.name.toLowerCase();\n        const cryptoSymbol = option.meta!.symbol.toLowerCase();\n\n        return (\n          cryptoSymbol.startsWith(searchTerm) ||\n          cryptoName.startsWith(searchTerm)\n        );\n      }}\n    />\n  );\n};\n","import { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AssetActionTypes } from \"../../components/crypto-assets/state/AssetActions\";\nimport { useAppSelector } from \"../../redux/useAppSelector\";\nimport { AssetsService } from \"../../services/crypto_assets/AssetsService\";\nimport { CryptoAssetIdentifier } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { useService } from \"./useService\";\n\nexport const useAllCoinsService = () => {\n  const allCoins = useAppSelector((state) => state.allCoins);\n\n  const dispatch = useDispatch();\n  const setCoinsList = useCallback(\n    (allCoins: CryptoAssetIdentifier[]) => {\n      dispatch({\n        type: AssetActionTypes.GET_ALL_COINS_SUCCESS,\n        payload: allCoins,\n      });\n    },\n    [dispatch],\n  );\n\n  const setCoinsListFailure = useCallback(\n    (error: string) => {\n      dispatch({\n        type: AssetActionTypes.GET_ALL_COINS_FAILURE,\n        payload: error,\n        error: true,\n      });\n    },\n    [dispatch],\n  );\n\n  const [setRequest] = useService(AssetsService.getAllCoins, {\n    onResponse(allCoins) {\n      setCoinsList(allCoins);\n    },\n    onError(err) {\n      console.error(\"Error getting all coins\", err);\n      setCoinsListFailure(\"Error getting all coins\");\n    },\n  });\n\n  const getCoinsList = useCallback(() => {\n    dispatch({ type: AssetActionTypes.GET_ALL_COINS_REQUEST });\n    setRequest(null);\n  }, [dispatch, setRequest]);\n\n  useEffect(() => {\n    getCoinsList();\n  }, [getCoinsList]);\n\n  return allCoins;\n};\n","export default __webpack_public_path__ + \"static/media/logo.8ddc634a.svg\";","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport logo from \"../../logo.svg\";\n\nexport const LogoWrapper = styled.img`\n  height: 2rem;\n`;\n\ninterface Props {\n  onClick?: VoidFunction;\n}\nexport const Logo = (props: Props) => {\n  return <LogoWrapper src={logo} alt=\"logo\" onClick={props.onClick} />;\n};\n","import React, { FC } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\n\nexport const NavItemWrapper = styled.div`\n  background-color: transparent;\n  padding: 0rem 0.5rem;\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n  opacity: ${({ theme }) => theme.opacityMuted};\n  white-space: nowrap;\n  transition: all 200ms;\n  border-bottom: solid 1px transparent;\n  margin-bottom: -1px;\n\n  a {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    color: inherit;\n    text-decoration: none;\n  }\n\n  &.nav-link--active,\n  &:focus,\n  &:hover {\n    border-bottom-color: ${({ theme }) => theme.colors.primaryLight};\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface NavLinkProps {\n  to: string;\n  exact?: boolean;\n}\n\nexport const NavLink: FC<NavLinkProps> = (props) => {\n  const match = useRouteMatch({\n    path: props.to,\n    exact: props.exact,\n  });\n  const className = match ? \"nav-link--active\" : undefined;\n\n  return (\n    <NavItemWrapper className={className}>\n      <Link to={props.to}>{props.children}</Link>\n    </NavItemWrapper>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components/macro\";\nimport { AssetSearch } from \"../search/AssetSearch\";\nimport { SearchSelectWrapper } from \"../search/SearchSelect\";\nimport { Logo, LogoWrapper } from \"./Logo\";\nimport { NavItemWrapper, NavLink } from \"./NavLink\";\n\nconst NavBarWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: center;\n\n  padding: 0.5rem 1rem 0rem 1rem;\n\n  border-bottom: solid 1px ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.backgroundDark};\n\n  ${LogoWrapper} {\n    margin: 0.5rem 0;\n    padding-right: 1rem;\n  }\n  ${SearchSelectWrapper} {\n    margin-left: 3px;\n  }\n\n  @media (max-width: ${({ theme }) => theme.screenSizes.mobileL}) {\n    ${LogoWrapper} {\n      display: none;\n    }\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst NavBar = styled.nav`\n  display: flex;\n  justify-content: center;\n  height: 100%;\n\n  ${NavItemWrapper} {\n    &:not(:first-child) {\n      margin-left: 1rem;\n      @media (max-width: ${({ theme }) => theme.screenSizes.mobileL}) {\n        margin-left: 0.5rem;\n      }\n    }\n  }\n`;\n\nexport const NavigationHeader = () => {\n  const history = useHistory();\n  return (\n    <NavBarWrapper>\n      <Logo onClick={() => history.push(\"/\")} />\n      <NavBar>\n        <NavLink to=\"/\" exact={true}>\n          Overview\n        </NavLink>\n        <NavLink to=\"/price-action\">Price Action</NavLink>\n      </NavBar>\n      <AssetSearch />\n    </NavBarWrapper>\n  );\n};\n","import { ColDef } from \"ag-grid-community\";\nimport {\n  formatIntegerPrice,\n  formatPercent,\n  formatPrice,\n  formatQuantity,\n} from \"./formatters\";\nimport { isDefined } from \"./isDefined\";\nimport { getSafeNumber, getSafeString } from \"./safeGetters\";\n\nexport const stringCompare = (valueA?: string, valueB?: string) => {\n  return getSafeString(valueA).localeCompare(getSafeString(valueB), \"en\", {\n    numeric: true,\n  });\n};\n\nexport const numericCompare = (valueA?: number, valueB?: number) => {\n  if (!isDefined(valueA)) {\n    return 1;\n  }\n  if (!isDefined(valueB)) {\n    return -1;\n  }\n  return valueA - valueB;\n};\n\nexport const percentComparator = (valueA: any, valueB: any) => {\n  const percentA = getSafeNumber(valueA);\n  const percentB = getSafeNumber(valueB);\n\n  if (!isDefined(percentA)) {\n    return -1;\n  }\n\n  if (!isDefined(percentB)) {\n    return 1;\n  }\n\n  return percentA - percentB;\n};\n\nexport const numericColDef: ColDef = {\n  type: \"numericColumn\",\n  comparator: numericCompare,\n  minWidth: 60,\n};\n\nexport const priceColDef: ColDef = {\n  ...numericColDef,\n  valueFormatter({ value }) {\n    return formatPrice(value);\n  },\n};\n\nexport const integerPriceColDef: ColDef = {\n  ...priceColDef,\n  valueFormatter({ value }) {\n    return formatIntegerPrice(value);\n  },\n};\n\nexport const percentColDef: ColDef = {\n  ...numericColDef,\n  comparator: percentComparator,\n  valueFormatter({ value }) {\n    return formatPercent(value);\n  },\n  cellClassRules: {\n    \"negative-value \": (params: { value?: string }) =>\n      (getSafeNumber(params.value) ?? 0) < 0,\n    \"positive-value \": (params: { value?: string }) =>\n      (getSafeNumber(params.value) ?? 0) > 0,\n  },\n};\n\nexport const quantityColDef: ColDef = {\n  ...numericColDef,\n  valueFormatter({ value }) {\n    return formatQuantity(value);\n  },\n};\n\nexport const defaultColDefs: ColDef = {\n  resizable: false,\n  floatingFilter: false,\n  sortable: true,\n  suppressMovable: true,\n  icons: {\n    sortAscending: '<span class=\"material-icons\">arrow_upward</span>',\n    sortDescending: '<span class=\"material-icons\">arrow_downward</span>',\n    first: '<span class=\"material-icons\">first_page</span>',\n    previous: '<span class=\"material-icons\">arrow_back_ios</span>',\n    next: '<span class=\"material-icons\">arrow_forward_ios</span>',\n    last: '<span class=\"material-icons\">last_page</span>',\n  },\n};\n","import styled, { css } from \"styled-components/macro\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\n\nexport const textEllipsisStyle = css`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const GridWrapper = styled.div`\n  height: 100%;\n\n  //GLOBAL\n  .ag-root-wrapper {\n    background-color: ${({ theme }) => theme.colors.secondaryDark};\n    color: ${({ theme }) => theme.colors.fontOnBackground};\n  }\n\n  .ag-right-aligned-cell {\n    text-align: right;\n  }\n\n  .ag-left-aligned-cell {\n    text-align: left;\n  }\n\n  .ag-body-viewport,\n  .ag-body-horizontal-scroll-viewport {\n    &::-webkit-scrollbar-track {\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n      border-radius: 0.75rem;\n      background-color: rgba(0, 0, 0, 0.9);\n    }\n\n    &::-webkit-scrollbar {\n      width: 0.875rem;\n      height: auto;\n      background-color: rgba(0, 0, 0, 0.9);\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 0.75rem;\n      box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n      background-color: #484848;\n    }\n  }\n\n  //HEADER\n  .ag-header {\n    border-bottom: solid 1px ${({ theme }) => theme.colors.backgroundLight};\n    background-color: ${({ theme }) => theme.colors.backgroundLightMuted};\n  }\n\n  .ag-header-row {\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n\n  .ag-header-cell,\n  .ag-cell {\n    padding-left: 1rem;\n    padding-right: 1rem;\n\n    &:focus {\n      border: solid 1px ${({ theme }) => theme.colors.focus};\n      outline: none;\n    }\n  }\n\n  .ag-header-cell {\n    &-resize {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &::after {\n        content: \"\";\n        width: 2px;\n        height: 50%;\n        background-color: ${({ theme }) => theme.colors.border};\n      }\n    }\n  }\n\n  //ROW\n  .ag-row {\n    &:hover {\n      background-color: ${({ theme }) => theme.colors.secondary};\n    }\n  }\n\n  //CELL\n  .ag-cell {\n    line-height: 40px; //Default row height used to center text vertically\n\n    &.negative-value {\n      color: ${({ theme }) => theme.colors.red};\n    }\n    &.positive-value {\n      color: ${({ theme }) => theme.colors.green};\n    }\n  }\n\n  //ICONS\n  .ag-icon,\n  .ag-header-icon {\n    .material-icons {\n      font-size: ${({ theme }) => theme.fontSize.body};\n    }\n  }\n`;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { INoRowsOverlayParams } from \"ag-grid-community\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\n\ninterface Props extends INoRowsOverlayParams {\n  noRowsMessage: string;\n  isLoading: boolean;\n}\n\nconst MessageWrapper = styled.span`\n  font-weight: bold;\n`;\n\nexport const NoRowsOverlay: FC<Props> = (props) => {\n  return props.isLoading ? (\n    <LoadingSpinner />\n  ) : (\n    <MessageWrapper>{props.noRowsMessage}</MessageWrapper>\n  );\n};\n","import React, { PropsWithChildren } from \"react\";\nimport { AgGridReact, AgGridColumn } from \"ag-grid-react\";\nimport { ColDef, GridOptions } from \"ag-grid-community\";\nimport { defaultColDefs } from \"../../utils/columnDefinitions\";\nimport { GridWrapper } from \"./styled\";\nimport { NoRowsOverlay } from \"./GridRowsOverlay\";\nimport { StringKey } from \"../../utils/types\";\n\nexport interface ColumnDefinition<T extends Record<string, any>>\n  extends ColDef {\n  colId: string | StringKey<T>;\n  field: StringKey<T>;\n}\n\ninterface GridProps<T> extends GridOptions {\n  rowData: T[] | undefined;\n  columnDefs: ColumnDefinition<T>[];\n  loading: boolean;\n  error?: string;\n}\n\nexport const Grid = <T extends Record<string, any>>({\n  columnDefs,\n  children,\n  loading,\n  error,\n  ...props\n}: PropsWithChildren<GridProps<T>>) => {\n  return (\n    <GridWrapper className=\"ag-theme-alpine-dark\">\n      <AgGridReact\n        suppressDragLeaveHidesColumns={true}\n        immutableData={true}\n        defaultColDef={defaultColDefs}\n        noRowsOverlayComponentFramework={NoRowsOverlay}\n        noRowsOverlayComponentParams={{\n          noRowsMessage: error ?? \"No Rows To Show\",\n          isLoading: loading,\n        }}\n        {...props}\n      >\n        {columnDefs.map((colDef) => (\n          <AgGridColumn key={colDef.colId} {...colDef} />\n        ))}\n      </AgGridReact>\n    </GridWrapper>\n  );\n};\n","import { ICellRenderer, ICellRendererParams } from \"ag-grid-community\";\nimport { useImperativeHandle, forwardRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { CryptoAsset } from \"../../services/crypto_assets/AssetsServiceInterface\";\n\nexport type CryptoNameValue = Pick<CryptoAsset, \"symbol\" | \"name\" | \"image\">;\ninterface CryptoNameCellProps extends ICellRendererParams {\n  value: CryptoNameValue;\n}\nconst NameCellWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n  img {\n    height: 1rem;\n  }\n  .crypto-name--main {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    text-transform: uppercase;\n    padding-left: 0.5rem;\n  }\n`;\n\nexport const CryptoNameCell = forwardRef<ICellRenderer, CryptoNameCellProps>(\n  (props, ref) => {\n    useImperativeHandle(ref, () => ({\n      refresh() {\n        return true;\n      },\n    }));\n\n    return (\n      <NameCellWrapper>\n        <img src={props.value.image} alt={props.value.name} />\n        <span className=\"crypto-name--main\">{props.value.symbol}</span>\n      </NameCellWrapper>\n    );\n  },\n);","import {\n  integerPriceColDef,\n  numericColDef,\n  percentColDef,\n  priceColDef,\n  quantityColDef,\n  stringCompare,\n} from \"../../utils/columnDefinitions\";\nimport { CryptoAsset } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { ColumnDefinition } from \"../grid/Grid\";\nimport { CryptoNameCell, CryptoNameValue } from \"./CryptoNameCell\";\n\nexport const assetColDefs: ColumnDefinition<CryptoAsset>[] = [\n  {\n    ...numericColDef,\n    width: 80,\n    field: \"rank\",\n    colId: \"rank\",\n    headerName: \"#\",\n    initialSort: \"asc\",\n  },\n  {\n    field: \"name\",\n    colId: \"name\",\n    headerName: \"Name\",\n    valueGetter: ({ data }: { data: CryptoAsset }): CryptoNameValue => ({\n      symbol: data.symbol,\n      name: data.name,\n      image: data.image,\n    }),\n    comparator: (valueA: CryptoNameValue, valueB: CryptoNameValue) =>\n      stringCompare(valueA.symbol, valueB.symbol),\n    cellRendererFramework: CryptoNameCell,\n    width: 120,\n    minWidth: 60,\n  },\n  {\n    ...priceColDef,\n    width: 125,\n    field: \"price\",\n    colId: \"price\",\n    headerName: \"PRICE\",\n  },\n  {\n    ...percentColDef,\n    width: 100,\n    field: \"priceChangePercent24h\",\n    colId: \"priceChangePercent24h\",\n    headerName: \"24h %\",\n  },\n  {\n    ...integerPriceColDef,\n    width: 160,\n    field: \"totalVolume\",\n    colId: \"totalVolume\",\n    headerName: \"Total Volume\",\n  },\n  {\n    ...integerPriceColDef,\n    width: 180,\n    field: \"marketCap\",\n    colId: \"marketCap\",\n    headerName: \"Market Cap\",\n  },\n  {\n    ...quantityColDef,\n    width: 210,\n    field: \"circulatingSupply\",\n    colId: \"circulatingSupply\",\n    headerName: \"Circulating Supply\",\n  },\n  {\n    ...quantityColDef,\n    width: 150,\n    field: \"maxSupply\",\n    colId: \"maxSupply\",\n    headerName: \"Max Supply\",\n  },\n];","import React, { FC, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\nimport { CryptoAsset } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { DEFAULT_CURRENCY } from \"../../utils/constants\";\nimport { usePricesFeed } from \"../../utils/hooks/useFeedService\";\nimport { PRICE_ACTION_PATH } from \"../../utils/routes/paths\";\nimport { GridRowClickedEvent } from \"../../utils/types\";\nimport { StateFetchStatus } from \"../../redux/AppState\";\nimport { Grid } from \"../grid/Grid\";\nimport { BaseWrapper } from \"../ContentWrappers\";\nimport { assetColDefs } from \"./cryptoAssetsColDefs\";\nimport { useAssetsService } from \"./useAssetsService\";\n\nconst AssetGridWrapper = styled(BaseWrapper)`\n  height: 70vh;\n  max-width: 79rem;\n  margin: 0 auto;\n`;\n\nconst getRowNodeId = (row: CryptoAsset) => row.id;\n\nexport const CryptoAssetsGrid: FC = (props) => {\n  const history = useHistory();\n  const { assets, status, error, getAssets } = useAssetsService();\n  usePricesFeed();\n\n  useEffect(() => {\n    getAssets({ per_page: 300, page: 1, vs_currency: DEFAULT_CURRENCY });\n  }, [getAssets]);\n\n  const rowData = useMemo(() => assets?.valueSeq().toArray(), [assets]);\n\n  return (\n    <AssetGridWrapper>\n      <Grid\n        rowData={rowData}\n        columnDefs={assetColDefs}\n        getRowNodeId={getRowNodeId}\n        error={error}\n        loading={status === StateFetchStatus.Busy}\n        onRowClicked={(event: GridRowClickedEvent<CryptoAsset>) => {\n          history.push(`${PRICE_ACTION_PATH}${event.data.id}`);\n        }}\n      />\n      {props.children}\n    </AssetGridWrapper>\n  );\n};\n","import { useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../../redux/useAppSelector\";\nimport { AssetsService } from \"../../services/crypto_assets/AssetsService\";\nimport { useService } from \"../../utils/hooks/useService\";\nimport { MarketMetricsActionTypes } from \"./state/MarketMetricsActions\";\n\nexport const useMarketMetrics = () => {\n  const dispatch = useDispatch();\n  const marketMetricsState = useAppSelector((state) => state.marketMetrics);\n\n  const [setRequest] = useService(AssetsService.getGlobalMarketData, {\n    onResponse(response) {\n      dispatch({\n        type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_SUCCESS,\n        payload: response,\n      });\n    },\n    onError() {\n      dispatch({\n        type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_FAILURE,\n        payload: \"Error getting global market data\",\n        error: true,\n      });\n    },\n  });\n\n  const getMarketMetrics = useCallback(() => {\n    dispatch({ type: MarketMetricsActionTypes.GET_GLOBAL_METRICS_REQUEST });\n    setRequest(null);\n  }, [dispatch, setRequest]);\n\n  useEffect(() => {\n    getMarketMetrics();\n  }, [getMarketMetrics]);\n\n  return {\n    marketMetrics: marketMetricsState,\n  };\n};\n","import React, { FC } from \"react\";\nimport {\n  formatPercent,\n  formatPrice,\n  getColorFromSign,\n} from \"../../utils/formatters\";\nimport { MainSubContentWrapper, ContentWrapper } from \"../ContentWrappers\";\nimport { PercentChange } from \"../crypto-assets/styled\";\nimport { useMarketMetrics } from \"./useMarketMetrics\";\nimport styled from \"styled-components/macro\";\n\nconst MarketMetricsWrapper = styled(ContentWrapper)`\n  justify-content: space-evenly;\n`;\n\nexport const MarketMetrics: FC = () => {\n  const { marketMetrics } = useMarketMetrics();\n  const percentChangeUsd = formatPercent(\n    marketMetrics?.marketCapChangePercentage24hUsd,\n  );\n  const totalMarketCap = formatPrice(marketMetrics?.totalMarketCapUsd);\n  const bitcoinDominance = formatPercent(\n    marketMetrics?.marketCapPercentage?.[\"btc\"],\n  );\n\n  return (\n    <MarketMetricsWrapper maxColumnSize=\"25rem\" minColumnSize=\"18rem\">\n      <MainSubContentWrapper>\n        <span className=\"content__sub\">Total Market Cap</span>\n        <span className=\"content__main--large\">\n          {totalMarketCap}\n          <wbr />\n          <PercentChange\n            color={getColorFromSign(\n              marketMetrics?.marketCapChangePercentage24hUsd,\n            )}\n          >\n            {percentChangeUsd}\n          </PercentChange>\n        </span>\n      </MainSubContentWrapper>\n      <MainSubContentWrapper>\n        <span className=\"content__sub\">Bitcoin Dominance</span>\n        <span className=\"content__main--large\">{bitcoinDominance}</span>\n      </MainSubContentWrapper>\n    </MarketMetricsWrapper>\n  );\n};\n","import React from \"react\";\nimport { CryptoAssetsGrid } from \"../crypto-assets/CryptoAssetsGrid\";\nimport { MarketMetrics } from \"../market-metrics/MarketMetrics\";\n\nexport const MarketOverview = () => {\n  return (\n    <>\n      <MarketMetrics />\n      <CryptoAssetsGrid />\n    </>\n  );\n};\n","import React, { FC, Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { DEFAULT_ASSET_ID } from \"../utils/constants\";\nimport { PRICE_ACTION_PATH } from \"../utils/routes/paths\";\nimport { LoadingSpinner } from \"./LoadingSpinner\";\nimport { MarketOverview } from \"./overview/MarketOverview\";\nconst PriceAction = React.lazy(() => import(\"./price-action/PriceAction\"));\n\nexport const AppRouter: FC = (props) => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact={true}>\n        <MarketOverview />\n      </Route>\n      <Route path={`${PRICE_ACTION_PATH}:id`}>\n        <Suspense fallback={<LoadingSpinner />}>\n          <PriceAction />\n        </Suspense>\n      </Route>\n      <Route exact={true} path={`${PRICE_ACTION_PATH}`}>\n        <Redirect\n          to={{\n            pathname: `${PRICE_ACTION_PATH}${DEFAULT_ASSET_ID}`,\n          }}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { AppActions } from \"../../../redux/AppActions\";\nimport { StateFetchStatus } from \"../../../redux/AppState\";\nimport { CryptoAssetIdentifier } from \"../../../services/crypto_assets/AssetsServiceInterface\";\nimport { AssetActionTypes } from \"./AssetActions\";\n\nexport interface AllCoinsState {\n  status: StateFetchStatus;\n  list: CryptoAssetIdentifier[];\n}\n\nconst initialState: AllCoinsState = {\n  status: StateFetchStatus.Idle,\n  list: [],\n};\n\nexport const allCoinsReducer = (\n  state: AllCoinsState = initialState,\n  action: AppActions,\n): AllCoinsState => {\n  switch (action.type) {\n    case AssetActionTypes.GET_ALL_COINS_REQUEST:\n      return { ...state, status: StateFetchStatus.Busy };\n    case AssetActionTypes.GET_ALL_COINS_SUCCESS:\n      return { ...state, list: action.payload, status: StateFetchStatus.Idle };\n    case AssetActionTypes.GET_ALL_COINS_FAILURE:\n      return { ...state, status: StateFetchStatus.Failure };\n    default:\n      return state;\n  }\n};\n","import { Map } from \"immutable\";\n\nexport const arrayToMap = <T, K extends keyof T>(\n  array: T[],\n  key: K,\n): Map<T[K], T> => Map(array.map((val) => [val[key], val]));\n","import { AppActions } from \"../../../redux/AppActions\";\nimport { AssetActionTypes } from \"./AssetActions\";\nimport { OrderedMap } from \"immutable\";\nimport { CryptoAsset } from \"../../../services/crypto_assets/AssetsServiceInterface\";\nimport { arrayToMap } from \"../../../utils/arrayToMap\";\nimport { StateFetchStatus } from \"../../../redux/AppState\";\nimport { removeUndefinedEntries } from \"../../../utils/typedObjectEntries\";\n\nexport interface AssetsState {\n  list: OrderedMap<string, CryptoAsset>;\n  status: StateFetchStatus;\n  error?: string;\n}\n\nconst initalState: AssetsState = {\n  list: OrderedMap(),\n  status: StateFetchStatus.Idle,\n};\n\nexport const assetsReducer = (\n  state: AssetsState = initalState,\n  action: AppActions,\n) => {\n  switch (action.type) {\n    case AssetActionTypes.GET_ASSETS_REQUEST:\n      return {\n        ...state,\n        error: undefined,\n        status: StateFetchStatus.Busy,\n      };\n\n    case AssetActionTypes.GET_ASSETS_SUCCESS:\n      return {\n        ...state,\n        error: undefined,\n        status: StateFetchStatus.Idle,\n        list: state.list.merge(arrayToMap(action.payload, \"id\")),\n      };\n\n    case AssetActionTypes.GET_ASSETS_FAILURE:\n      return {\n        ...state,\n        status: StateFetchStatus.Failure,\n        error: action.payload,\n      };\n\n    case AssetActionTypes.UPDATE_ASSET:\n      return {\n        ...state,\n        error: undefined,\n        status: StateFetchStatus.Idle,\n        list: state.list.update(action.payload.id, (prev) => ({\n          ...prev,\n          ...removeUndefinedEntries(action.payload),\n        })),\n      };\n    default:\n      return state;\n  }\n};\n","import { GlobalMarketMetrics } from \"../../../services/crypto_assets/AssetsServiceInterface\";\nimport { AppActions } from \"../../../redux/AppActions\";\nimport { StateFetchStatus } from \"../../../redux/AppState\";\nimport { MarketMetricsActionTypes } from \"./MarketMetricsActions\";\n\nexport interface GlobalMarketMetricsState extends Partial<GlobalMarketMetrics> {\n  status: StateFetchStatus;\n}\n\nexport const initialMarketMetricsState: GlobalMarketMetricsState = {\n  status: StateFetchStatus.Idle,\n};\n\nexport const marketMetricsReducer = (\n  state: GlobalMarketMetricsState = initialMarketMetricsState,\n  action: AppActions,\n): GlobalMarketMetricsState => {\n  switch (action.type) {\n    case MarketMetricsActionTypes.GET_GLOBAL_METRICS_REQUEST:\n      return { ...state, status: StateFetchStatus.Busy };\n    case MarketMetricsActionTypes.GET_GLOBAL_METRICS_SUCCESS:\n      return { ...state, ...action.payload, status: StateFetchStatus.Idle };\n    case MarketMetricsActionTypes.GET_GLOBAL_METRICS_FAILURE:\n      return { ...state, status: StateFetchStatus.Failure };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { allCoinsReducer } from \"../components/crypto-assets/state/allCoinsReducer\";\nimport { assetsReducer } from \"../components/crypto-assets/state/assetsReducer\";\nimport { marketMetricsReducer } from \"../components/market-metrics/state/marketMetricsReducer\";\n\nexport const appReducer = combineReducers({\n  assets: assetsReducer,\n  marketMetrics: marketMetricsReducer,\n  allCoins: allCoinsReducer,\n});\n","import { Middleware } from \"redux\";\nimport { AppActions } from \"../AppActions\";\n\nexport const logger: Middleware =\n  (storeAPI) => (next) => (action: AppActions) => {\n    console.info(\"dispatching: \", action);\n\n    return next(action);\n  };\n","import { configureStore } from \"./configureStore\";\n\nconst store = configureStore();\n\nexport default store;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { appReducer } from \"./appReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { logger } from \"./middlewares/logger\";\n\nexport const configureStore = (initialState?: any) => {\n  const enhancer = applyMiddleware(logger);\n  const composedEnhancers = composeWithDevTools(enhancer);\n\n  const store = createStore(appReducer, initialState, composedEnhancers);\n\n  return store;\n};\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components/macro\";\nimport \"./App.css\";\nimport { NavigationHeader } from \"./components/header/NavigationHeader\";\nimport { theme } from \"./theme/theme\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./components/AppRouter\";\nimport store from \"./redux/store\";\n\nconst AppWrapper = styled.div`\n  max-width: ${({ theme }) => theme.screenSizes.desktop};\n  min-width: ${({ theme }) => theme.screenSizes.mobileS};\n  margin: 0 auto;\n  height: 100%;\n  overflow: auto;\n  font-size: ${({ theme }) => theme.fontSize.bodySmall};\n  background: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.fontOnBackground};\n\n  main {\n    padding: 1rem;\n  }\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <AppWrapper>\n            <NavigationHeader />\n            <main>\n              <AppRouter />\n            </main>\n          </AppWrapper>\n        </ThemeProvider>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","import {\n  CryptoAsset,\n  CryptoAssetIdentifier,\n} from \"../../../services/crypto_assets/AssetsServiceInterface\";\nimport { AssetUpdate } from \"../../../services/feeds/FeedServiceInterface\";\nimport { FluxStandardAction } from \"../../../redux/AppActions\";\n\nexport enum AssetActionTypes {\n  GET_ASSETS_REQUEST = \"GET_ASSETS_REQUEST\",\n  GET_ASSETS_SUCCESS = \"GET_ASSETS_SUCCESS\",\n  GET_ASSETS_FAILURE = \"GET_ASSETS_FAILURE\",\n  UPDATE_ASSET = \"UPDATE_ASSET\",\n  GET_ALL_COINS_REQUEST = \"GET_ALL_COINS_REQUEST\",\n  GET_ALL_COINS_SUCCESS = \"GET_ALL_COINS_SUCCESS\",\n  GET_ALL_COINS_FAILURE = \"GET_ALL_COINS_FAILURE\",\n}\n\ninterface GetAssetsRequestAction extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ASSETS_REQUEST;\n}\n\ninterface GetAssetsSuccessAction extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ASSETS_SUCCESS;\n  payload: CryptoAsset[];\n}\n\ninterface GetAssetsFailureAction extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ASSETS_FAILURE;\n  payload: string;\n  error: boolean;\n}\n\ninterface UpdateAssetAction extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.UPDATE_ASSET;\n  payload: AssetUpdate;\n}\n\ninterface GetAllCoinsRequestAction\n  extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ALL_COINS_REQUEST;\n}\ninterface GetAllCoinsSuccessAction\n  extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ALL_COINS_SUCCESS;\n  payload: CryptoAssetIdentifier[];\n}\ninterface GetAllCoinsFailureAction\n  extends FluxStandardAction<AssetActionTypes> {\n  type: AssetActionTypes.GET_ALL_COINS_FAILURE;\n  payload: string;\n  error: true;\n}\n\nexport type AssetActions =\n  | GetAssetsRequestAction\n  | GetAssetsSuccessAction\n  | GetAssetsFailureAction\n  | UpdateAssetAction\n  | GetAllCoinsRequestAction\n  | GetAllCoinsSuccessAction\n  | GetAllCoinsFailureAction;\n","import { isDefined, isNumber } from \"./isDefined\";\n\nexport const getSafeNumber = (value: any): number | undefined => {\n  const number = parseFloat(`${value}`);\n  if (isNumber(number)) {\n    return number;\n  }\n\n  return undefined;\n};\n\nexport const getNumericValue = (value: any): number =>\n  getSafeNumber(value) ?? 0;\n\nexport const getSafeString = (value?: string | number): string => {\n  if (isDefined(value)) {\n    return typeof value === \"string\" ? value : String(value);\n  }\n\n  return \"\";\n};\n\nexport const getSafeMinMax = <T extends Record<string, any>, K extends keyof T>(\n  values: T[] | undefined,\n  key: K,\n): [number, number] | undefined => {\n  if (!isDefined(values)) {\n    return undefined;\n  }\n  const numericValues = values\n    .map((value) => getSafeNumber(value?.[key]))\n    .filter(isDefined);\n  const max = Math.max(...numericValues);\n  const min = Math.min(...numericValues);\n\n  return [min, max];\n};\n\nexport const getSafeDate = (date?: string | Date) => {\n  if (!date) {\n    return undefined;\n  }\n\n  try {\n    return new Date(date);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nexport const getSafeIndex = (nextIndex: number, max: number) => {\n  if (!max || max < 0) {\n    return 0;\n  }\n  if (nextIndex < 0) {\n    return max - 1;\n  }\n  return nextIndex % max;\n};\n","import store from \"./store\";\n\nexport enum StateFetchStatus {\n  Idle = \"Idle\",\n  Failure = \"Failure\",\n  Busy = \"Busy\",\n}\n\nexport type AppState = ReturnType<typeof store.getState>;\n","import { Colors } from \"../theme/theme\";\nimport { DEFAULT_CURRENCY } from \"./constants\";\nimport { isDefined } from \"./isDefined\";\nimport { getNumericValue, getSafeDate, getSafeNumber } from \"./safeGetters\";\nimport { format } from \"date-fns\";\n\nexport const DEFAULT_LOCALE = \"en-US\";\nexport const TIME_FORMAT = \"h:mm:ss aa\";\nexport const DATE_FORMAT = \"MMMM d yyyy\";\nexport const DAY_TIME_FORMAT = `MMM d, ${TIME_FORMAT}`;\nexport const DATETIME_FORMAT = `${DATE_FORMAT}, ${TIME_FORMAT}`;\n\nconst formatNumber = (\n  value: number,\n  options: Intl.NumberFormatOptions | undefined,\n  locale = DEFAULT_LOCALE,\n): string => Intl.NumberFormat(locale, options).format(value);\n\nconst safelyFormatNumber = (\n  value: string | number | undefined,\n  options?: Intl.NumberFormatOptions,\n): string => {\n  const num = getSafeNumber(value);\n  if (isDefined(num)) {\n    return formatNumber(num, options);\n  }\n\n  return \"\";\n};\n\nconst isGreaterThan = (valA?: string | number, valB?: string | number) =>\n  getNumericValue(valA) > getNumericValue(valB);\n\nexport const formatPrice = (\n  price?: string | number,\n  decimalPlaces = 2,\n): string =>\n  safelyFormatNumber(price, {\n    style: \"currency\",\n    currency: DEFAULT_CURRENCY.toUpperCase(),\n    minimumFractionDigits: decimalPlaces,\n    maximumSignificantDigits: isGreaterThan(1, price) ? 3 : undefined,\n  }) || \"--\";\n\nexport const formatIntegerPrice = (price?: string | number) =>\n  formatPrice(price, 0);\n\nexport const formatPercent = (percent?: string | number) => {\n  const value = getSafeNumber(percent);\n  if (isDefined(value)) {\n    return formatNumber(value / 100, {\n      style: \"percent\",\n      maximumFractionDigits: 2,\n      minimumFractionDigits: 2,\n    });\n  }\n  return \"--\";\n};\n\nexport const formatQuantity = (quantity?: string | number) =>\n  safelyFormatNumber(quantity) || \"--\";\n\nexport const getColorFromSign = (\n  value?: string | number,\n): Colors | undefined => {\n  const num = getSafeNumber(value);\n\n  if (!isDefined(num) || num === 0) {\n    return undefined;\n  }\n\n  return num > 0 ? \"green\" : \"red\";\n};\n\nconst safeDateFormat = (\n  timestamp: number | string | undefined,\n  formatTemplate: string,\n) => {\n  const milliseconds = getSafeNumber(timestamp);\n  if (!isDefined(milliseconds)) {\n    return \"\";\n  }\n  return format(milliseconds, formatTemplate);\n};\nexport const formatDate = (timestamp: number | string | undefined): string =>\n  safeDateFormat(timestamp, DATE_FORMAT);\n\nexport const formatDateTime = (\n  timestamp: number | string | undefined,\n): string => safeDateFormat(timestamp, DATETIME_FORMAT);\n\nexport const formatDayTime = (timestamp: number | string | undefined): string =>\n  safeDateFormat(timestamp, DAY_TIME_FORMAT);\n\nexport const parseDateString = (\n  date: string | Date | undefined,\n  formatTemplate = DATE_FORMAT,\n) => {\n  const safeDate = getSafeDate(date);\n  return safeDate ? format(safeDate, formatTemplate) : \"\";\n};\n","export const DEFAULT_ASSET_ID = \"bitcoin\";\nexport const DEFAULT_CURRENCY = \"usd\";\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { AppState } from \"./AppState\";\n\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n","import { FluxStandardAction } from \"../../redux/AppActions\";\n\nexport enum UseServiceActionsTypes {\n  FETCH_REQUEST = \"FETCH_REQUEST\",\n  RESET = \"RESET\",\n}\n\ntype BaseServiceAction = FluxStandardAction<UseServiceActionsTypes>;\n\ninterface FetchServiceAction extends BaseServiceAction {\n  type: UseServiceActionsTypes.FETCH_REQUEST;\n  payload: any;\n}\n\ninterface ResetServiceAction extends BaseServiceAction {\n  type: UseServiceActionsTypes.RESET;\n}\n\nexport type ServiceActions = FetchServiceAction | ResetServiceAction;\n","import { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { ServiceActions, UseServiceActionsTypes } from \"./ServiceActions\";\n\ntype Service<Request, Response> = (request: Request) => Observable<Response>;\n\ninterface ServiceResponseHandler<Response> {\n  onResponse?(response: Response): void;\n  onError?(error: unknown): void;\n}\n\ninterface ServiceState {\n  status: \"FETCH_REQUESTED\" | \"IDLE\";\n  request?: any;\n}\n\nconst initialServiceState: ServiceState = {\n  status: \"IDLE\",\n};\n\nconst serviceReducer = (\n  state = initialServiceState,\n  action: ServiceActions,\n): ServiceState => {\n  switch (action.type) {\n    case UseServiceActionsTypes.FETCH_REQUEST:\n      return { ...state, status: \"FETCH_REQUESTED\", request: action.payload };\n    case UseServiceActionsTypes.RESET:\n      return initialServiceState;\n    default:\n      return state;\n  }\n};\n\nexport const useService = <Request, Response>(\n  service: Service<Request, Response>,\n  handlers?: ServiceResponseHandler<Response>,\n): [(request: Request) => void, boolean] => {\n  const [serviceState, dispatch] = useReducer(\n    serviceReducer,\n    initialServiceState,\n  );\n\n  const handlersRef = useRef<ServiceResponseHandler<Response> | undefined>(\n    handlers,\n  );\n\n  if (!handlersRef.current) {\n    handlersRef.current = handlers;\n  }\n\n  useEffect(() => {\n    let subscription: Subscription;\n    if (serviceState.status === \"FETCH_REQUESTED\") {\n      subscription = service(serviceState.request).subscribe({\n        next(nextValue) {\n          handlersRef.current?.onResponse?.(nextValue);\n        },\n        complete() {\n          dispatch({ type: UseServiceActionsTypes.RESET });\n          subscription?.unsubscribe();\n        },\n        error(error) {\n          console.error(error);\n          handlersRef.current?.onError?.(error);\n          dispatch({ type: UseServiceActionsTypes.RESET });\n        },\n      });\n    }\n\n    return () => {\n      subscription?.unsubscribe();\n    };\n  }, [service, serviceState.request, serviceState.status]);\n\n  const setRequest = useCallback(\n    (request: Request) => {\n      dispatch({\n        type: UseServiceActionsTypes.FETCH_REQUEST,\n        payload: request,\n      });\n    },\n    [dispatch],\n  );\n  const isBusy = serviceState.status === \"FETCH_REQUESTED\";\n  return [setRequest, isBusy];\n};\n","import styled from \"styled-components/macro\";\n\nexport const BaseWrapper = styled.div`\n  overflow: hidden;\n\n  border-radius: ${({ theme }) => theme.borderRadius};\n  box-shadow: ${({ theme }) => theme.boxShadow};\n\n  //elevation in dark theme\n  filter: brightness(1.08);\n`;\n\ninterface ContentWrapperProps {\n  minColumnSize?: string;\n  maxColumnSize?: string;\n}\nexport const ContentWrapper = styled.div<ContentWrapperProps>`\n  display: flex;\n  flex-wrap: wrap;\n  place-content: center;\n  row-gap: 1rem;\n  margin: 1rem auto;\n  max-width: 79rem;\n  overflow: hidden;\n`;\n\nexport const MainSubContentWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 0.5rem;\n  overflow: auto;\n  text-align: center;\n\n  .content__sub,\n  .content__main,\n  .content__main--large {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .content__sub {\n    font-size: ${({ theme }) => theme.fontSize.bodyXSmall};\n    opacity: ${({ theme }) => theme.opacityMuted};\n  }\n  .content__main--large {\n    font-size: ${({ theme }) => theme.fontSize.h6};\n  }\n`;\n\ninterface GridContentProps {\n  columns?: number;\n}\nexport const GridContentWrapper = styled.div<GridContentProps>`\n  display: grid;\n  grid-template-columns: repeat(${({ columns = 2 }) => columns}, 1fr);\n  gap: 1rem;\n  margin: 0 auto;\n`;\n","import { Observable } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { getRequestParams } from \"./connectionHelpers\";\n\nexport enum RequestMethod {\n  GET = \"GET\",\n  POST = \"POST\",\n}\n\nexport const AjaxConnection = <Request, Response>(\n  endpoint: string,\n  request: Request | undefined,\n  method: RequestMethod = RequestMethod.GET,\n): Observable<Response> => {\n  const { url, initRequest } = getRequestParams(endpoint, request, method);\n  return fromFetch(url, initRequest).pipe(\n    switchMap((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(`got non-ok response: ${response.status}`);\n    }),\n  );\n};\n","import { AjaxConnection } from \"../connection/AjaxConnection\";\nimport {\n  AssetsServiceInterface,\n  CryptoAssetIdentifier,\n  GetAssetDetailsRequest,\n  GetCryptoAssetsRequest,\n  GlobalMarketMetricsResponse,\n  HistoricalAssetPriceRequest,\n  ServerCryptoAsset,\n} from \"./AssetsServiceInterface\";\nimport { map, retry } from \"rxjs/operators\";\nimport { assetsApi } from \"../connection/apis\";\nimport { DEFAULT_CURRENCY } from \"../../utils/constants\";\n\nconst ASSETS_PATH = `${assetsApi}/coins/`;\nconst MARKET_METRICS_PATH = `${assetsApi}/global/`;\n\ntype ServerGetAssetsResponse = ServerCryptoAsset[];\n\ninterface ServerGetHistoricalPriceResponse {\n  prices: Array<[number, number]> /*[timestamp, price] */;\n}\n\ninterface ServerGlobalMarketMetricsResponse {\n  data: GlobalMarketMetricsResponse;\n}\n\nexport const AssetsService: AssetsServiceInterface = {\n  getAllCoins: () =>\n    AjaxConnection<{ include_platform: boolean }, CryptoAssetIdentifier[]>(\n      `${ASSETS_PATH}list`,\n      { include_platform: false },\n    ),\n  getCryptoAssets: (request = { vs_currency: DEFAULT_CURRENCY }) =>\n    AjaxConnection<GetCryptoAssetsRequest, ServerGetAssetsResponse>(\n      `${ASSETS_PATH}markets`,\n      request,\n    ).pipe(\n      map((response) => ({\n        assets: response.map((asset) => ({\n          id: asset.id,\n          symbol: asset.symbol,\n          name: asset.name,\n          image: asset.image,\n          price: asset.current_price,\n          marketCap: asset.market_cap,\n          rank: asset.market_cap_rank,\n          fullyDilutedValuation: asset.fully_diluted_valuation,\n          totalVolume: asset.total_volume,\n          high24h: asset.high_24h,\n          low24h: asset.low_24h,\n          priceChange24h: asset.price_change_24h,\n          priceChangePercent24h: asset.price_change_percentage_24h,\n          priceChangePercent1h: asset.price_change_percentage_1h_in_currency,\n          marketCapChange24h: asset.market_cap_change_24h,\n          marketCapChangePercent24h: asset.market_cap_change_percentage_24h,\n          circulatingSupply: asset.circulating_supply,\n          totalSupply: asset.total_supply,\n          maxSupply: asset.max_supply,\n          lastUpdated: asset.last_updated,\n        })),\n      })),\n      retry(3),\n    ),\n\n  getGlobalMarketData: () =>\n    AjaxConnection<undefined, ServerGlobalMarketMetricsResponse>(\n      `${MARKET_METRICS_PATH}`,\n      undefined,\n    ).pipe(\n      map(({ data }) => ({\n        totalMarketCapUsd: data.total_market_cap[DEFAULT_CURRENCY],\n        totalVolumeUsd: data.total_volume[DEFAULT_CURRENCY],\n        marketCapPercentage: data.market_cap_percentage,\n        marketCapChangePercentage24hUsd:\n          data.market_cap_change_percentage_24h_usd,\n        updatedAt: data.updated_at,\n      })),\n      retry(3),\n    ),\n\n  getHistoricalPriceData: ({ id, ...request }: HistoricalAssetPriceRequest) =>\n    AjaxConnection<\n      Omit<HistoricalAssetPriceRequest, \"id\">,\n      ServerGetHistoricalPriceResponse\n    >(`${ASSETS_PATH}${id}/market_chart`, request).pipe(\n      map(({ prices }) => ({\n        id,\n        historicalPriceData: prices.map(([time, price]) => ({ time, price })),\n        days: request.days,\n      })),\n      retry(3),\n    ),\n\n  getAssetDetails: ({ id, ...request }: GetAssetDetailsRequest) =>\n    AjaxConnection<\n      Omit<GetAssetDetailsRequest, \"id\">,\n      ServerGetAssetDetailsResponse\n    >(`${ASSETS_PATH}${id}`, request).pipe(\n      map(\n        (response) => ({\n          id: response.id,\n          symbol: response.symbol,\n          name: response.name,\n          image: response.image.small,\n          price: response.market_data.current_price.usd,\n          marketCap: response.market_data.market_cap.usd,\n          rank: response.market_cap_rank,\n          fullyDilutedValuation:\n            response.market_data.fully_diluted_valuation.usd,\n          totalVolume: response.market_data.total_volume.usd,\n          high24h: response.market_data.high_24h.usd,\n          low24h: response.market_data.low_24h.usd,\n          priceChange24h: response.market_data.price_change_24h,\n          priceChangePercent24h:\n            response.market_data.price_change_percentage_24h,\n          priceChangePercentage7d:\n            response.market_data.price_change_percentage_7d,\n          priceChangePercentage14d:\n            response.market_data.price_change_percentage_14d,\n          priceChangePercentage30d:\n            response.market_data.price_change_percentage_30d,\n          priceChangePercentage60d:\n            response.market_data.price_change_percentage_60d,\n          priceChangePercentage200d:\n            response.market_data.price_change_percentage_200d,\n          priceChangePercentage1y:\n            response.market_data.price_change_percentage_1y,\n          marketCapChange24h: response.market_data.market_cap_change_24h,\n          marketCapChangePercent24h:\n            response.market_data.market_cap_change_percentage_24h,\n          circulatingSupply: response.market_data.circulating_supply,\n          totalSupply: response.market_data.total_supply,\n          maxSupply: response.market_data.max_supply,\n          lastUpdated: response.last_updated,\n          blockTimeInMinutes: response.block_time_in_minutes,\n          categories: response.categories,\n          description: response.description.en,\n          homepageLink: response.links.homepage?.find(Boolean),\n          genesisDate: response.genesis_date,\n          totalValueLocked: response.market_data.total_value_locked,\n          mcapToTotalValueLockedRatio: response.market_data.mcap_to_tvl_ratio,\n          allTimeHigh: response.market_data.ath.usd,\n          allTimeHighDate: response.market_data.ath_date.usd,\n        }),\n        retry(3),\n      ),\n    ),\n};\n\ninterface ServerGetAssetDetailsResponse {\n  id: string;\n  symbol: string;\n  name: string;\n  block_time_in_minutes: number;\n  hashing_algorithm: string;\n  categories: string[];\n  description: {\n    en: string;\n  };\n  links: {\n    homepage: Array<string | undefined>;\n    blockchain_site: Array<string | undefined>;\n    repos_url: {\n      github: string[];\n      bitbucket: string[];\n    };\n  };\n  image: {\n    thumb: string;\n    small: string;\n    large: string;\n  };\n  country_origin: string;\n  genesis_date: string;\n  sentiment_votes_up_percentage: number;\n  sentiment_votes_down_percentage: number;\n  market_cap_rank: number;\n  coingecko_rank: number;\n  coingecko_score: number;\n  developer_score: number;\n  community_score: number;\n  liquidity_score: number;\n  public_interest_score: number;\n  market_data: {\n    current_price: {\n      btc: number;\n      usd: number;\n    };\n    total_value_locked?: number;\n    mcap_to_tvl_ratio?: number;\n    fdv_to_tvl_ratio?: number;\n    ath: {\n      btc: number;\n      usd: number;\n    };\n    ath_change_percentage: {\n      btc: number;\n      usd: number;\n    };\n    ath_date: {\n      btc: string;\n      usd: string;\n    };\n    atl: {\n      btc: number;\n      usd: number;\n    };\n    atl_change_percentage: {\n      btc: number;\n      usd: number;\n    };\n    atl_date: {\n      btc: string;\n      usd: string;\n    };\n    market_cap: {\n      btc: number;\n      usd: number;\n    };\n    market_cap_rank: 1;\n    fully_diluted_valuation: {\n      btc: number;\n      usd: number;\n    };\n    total_volume: {\n      btc: number;\n      usd: number;\n    };\n    high_24h: {\n      btc: number;\n      usd: number;\n    };\n    low_24h: {\n      btc: number;\n      usd: number;\n    };\n    price_change_24h: number;\n    price_change_percentage_24h: number;\n    price_change_percentage_7d: number;\n    price_change_percentage_14d: number;\n    price_change_percentage_30d: number;\n    price_change_percentage_60d: number;\n    price_change_percentage_200d: number;\n    price_change_percentage_1y: number;\n    market_cap_change_24h: number;\n    market_cap_change_percentage_24h: number;\n    price_change_24h_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_1h_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_24h_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_7d_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_14d_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_30d_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_60d_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_200d_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    price_change_percentage_1y_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    market_cap_change_24h_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    market_cap_change_percentage_24h_in_currency: {\n      btc: number;\n      usd: number;\n    };\n    total_supply: number;\n    max_supply: number;\n    circulating_supply: number;\n    last_updated: string;\n  };\n  developer_data: {\n    forks: number;\n    stars: number;\n    subscribers: number;\n    total_issues: number;\n    closed_issues: number;\n    pull_requests_merged: number;\n    pull_request_contributors: number;\n    commit_count_4_weeks: number;\n  };\n  status_updates: [];\n  last_updated: string;\n}\n","export const assetsApi = process.env.REACT_APP_COINGECKO_URL;\nexport const pricesStreamApi = process.env.REACT_APP_COINCAP_WEBSOCKET;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst SpinnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 10rem;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Spinner = styled.div`\n  display: block;\n  width: 4rem;\n  height: 4rem;\n  border-radius: 50%;\n  border: 0.3rem solid ${({ theme }) => theme.colors.border};\n  border-color: ${({ theme }) => theme.colors.primary} transparent\n    ${({ theme }) => theme.colors.primary} transparent;\n  animation: ring-rotate 1.2s linear infinite;\n\n  @keyframes ring-rotate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const LoadingSpinner: FC = (props) => {\n  return (\n    <SpinnerWrapper>\n      <Spinner />\n      {props.children}\n    </SpinnerWrapper>\n  );\n};\n","import { isDefined } from \"../../utils/isDefined\";\nimport { jsonToString } from \"../../utils/parseJson\";\nimport { RequestMethod } from \"./AjaxConnection\";\n\nconst objectEntriesToStringParams = (entries: Array<[string, unknown]>) =>\n  entries.reduce((stringParams, [field, value]) => {\n    if (isDefined(value)) {\n      return `${stringParams ? `${stringParams}&` : \"\"}${field}=${value}`;\n    }\n    return stringParams;\n  }, \"\");\n\nconst parseStringParams = (params: any): string => {\n  if (!params) {\n    return \"\";\n  }\n\n  if (typeof params === \"object\" && !Array.isArray(params)) {\n    return objectEntriesToStringParams(Object.entries(params));\n  }\n\n  return String(params);\n};\n\nconst parseUrl = (url: string, params?: any) => {\n  if (isDefined(params)) {\n    const stringParams = parseStringParams(params);\n    return encodeURI(`${url}?${stringParams}`);\n  }\n  return encodeURI(url);\n};\n\nconst getInitRequest = (method: RequestMethod, request: any): RequestInit => {\n  const headers = new Headers();\n  headers.set(\"Content-Type\", \"application/json\");\n\n  let body = undefined;\n\n  if (method === RequestMethod.POST) {\n    body = jsonToString(request);\n  }\n\n  return {\n    headers,\n    method,\n    body,\n  };\n};\n\nexport const getRequestParams = (\n  endpoint: string,\n  request: any,\n  method: RequestMethod | undefined,\n) => {\n  const validRequest = getValidRequest(request);\n  const url = parseUrl(endpoint, validRequest);\n  const initRequest = method && getInitRequest(method, validRequest);\n\n  return {\n    url,\n    initRequest,\n  };\n};\n\nconst getValidRequest = <T = any>(request: T): T | undefined => {\n  if (!request) {\n    return undefined;\n  }\n\n  if (typeof request === \"object\") {\n    const values = Object.values(request).filter(isDefined);\n    if (!values.length) {\n      return undefined;\n    }\n  }\n\n  return request;\n};\n","import { isDefined } from \"./isDefined\";\n\nexport const jsonToString = (val: any): string | undefined => {\n  if (!isDefined(val)) {\n    return undefined;\n  }\n\n  try {\n    return JSON.stringify(val);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const parseJson = (val: any) => {\n  if (!isDefined(val)) {\n    return undefined;\n  }\n\n  try {\n    return JSON.parse(val);\n  } catch (error) {\n    return val;\n  }\n};\n","//https://www.material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=37474F&secondary.color=efb90b\n\nexport const theme = {\n  colors: {\n    background: \"#212121\" as \"#212121\",\n    backgroundLight: \"#484848\" as \"#484848\",\n    backgroundDark: \"#121212\" as \"#121212\",\n    backgroundMuted: \"rgba(33,33,33,0.3)\" as \"rgba(33,33,33,0.3)\",\n    backgroundLightMuted: \"rgba(72,72,72, 0.3)\" as \"rgba(72,72,72, 0.3)\",\n    fontOnBackground: \"rgba(238,238,238)\" as \"rgba(238,238,238)\",\n    fontOnBackgroundLight: \"rgba(238,238,238)\" as \"rgba(238,238,238)\",\n    fontOnBackgroundDark: \"rgba(238,238,238)\" as \"rgba(238,238,238)\",\n    fontOnPrimary: \"rgba(255,255,255)\" as \"rgba(255,255,255)\",\n    fontOnPrimaryLight: \"rgb(0,0,0)\" as \"rgb(0,0,0)\",\n    fontOnPrimaryDark: \"rgb(255,255,255)\" as \"rgb(255,255,255)\",\n    primary: \"#f0b90b\" as \"#f0b90b\",\n    primaryLight: \"#ffeb50\" as \"#ffeb50\",\n    primaryDark: \"#b98900\" as \"#b98900\",\n    secondary: \"#37474f\" as \"#37474f\",\n    secondaryLight: \"#62717b\" as \"#62717b\",\n    secondaryDark: \"#101f27\" as \"#101f27\",\n    focus: \"#80bdff\" as \"#80bdff\",\n    border: \"#5c5c5d\" as \"#5c5c5d\",\n    borderMuted: \"rgba(92,92,93,0.2)\" as \"rgba(92,92,93,0.2)\",\n    red: \"#f75a6e\" as \"#f75a6e\",\n    green: \"#73e1b6\" as \"#73e1b6\",\n  },\n  borderRadius: \"3px\" as \"3px\",\n  opacityMuted: 0.7,\n  opacityDisabled: 0.45,\n  boxShadow: \"rgba(0,0,0,0.12) 0px 3px 4px 0px\" as \"rgba(0,0,0,0.12) 0px 3px 4px 0px\",\n  fontSize: {\n    h1: \"6rem\" as \"6rem\",\n    h2: \"3.75rem\" as \"3.75rem\",\n    h3: \"3rem\" as \"3rem\",\n    h4: \"2.125rem\" as \"2.125rem\",\n    h5: \"1.5rem\" as \"1.5rem\",\n    h6: \"1.25rem\" as \"1.25rem\",\n    body: \"1rem\" as \"1rem\",\n    bodySmall: \"0.875rem\" as \"0.875rem\",\n    bodyXSmall: \"0.75rem\" as \"0.75rem\",\n  },\n  screenSizes: {\n    mobileS: \"320px\" as \"320px\",\n    mobileM: \"375px\" as \"375px\",\n    mobileL: \"425px\" as \"425px\",\n    tablet: \"768px\" as \"768px\",\n    laptop: \"1024px\" as \"1024px\",\n    laptopL: \"1440px\" as \"1440px\",\n    desktop: \"2560px\" as \"2560px\",\n  },\n};\n\nexport type Theme = typeof theme;\nexport type Colors = keyof Theme[\"colors\"];\n","import styled from \"styled-components/macro\";\nimport { Colors } from \"../../theme/theme\";\nimport { GridContentWrapper } from \"../ContentWrappers\";\nimport { TextPlaceHolder } from \"../placeholders/styled\";\n\nexport const PercentChange = styled.span<{ color?: Colors }>`\n  color: ${({ theme, color }) => color && theme.colors[color]};\n  font-size: ${({ theme }) => theme.fontSize.body};\n  padding-left: ${({ theme }) => theme.fontSize.bodyXSmall};\n  white-space: nowrap;\n`;\n\nexport const DetailsWrapper = styled(GridContentWrapper)`\n  padding-top: 3rem;\n  column-gap: 6rem;\n  @media (max-width: ${({ theme }) => theme.screenSizes.tablet}) {\n    width: 90%;\n  }\n  @media (max-width: ${({ theme }) => theme.screenSizes.mobileL}) {\n    column-gap: 3rem;\n    width: 100%;\n  }\n  @media (max-width: ${({ theme }) => theme.screenSizes.mobileM}) {\n    grid-template-columns: 1fr;\n  }\n\n  ${TextPlaceHolder} {\n    justify-self: center;\n  }\n`;\n\nexport const DetailsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.screenSizes.tablet}) {\n    flex-direction: column;\n    align-items: unset;\n  }\n  @media (max-width: ${({ theme }) => theme.screenSizes.mobileM}) {\n    align-items: center;\n  }\n\n  .value,\n  .label {\n    text-transform: capitalize;\n  }\n  .value {\n    font-weight: bold;\n    &--small {\n      font-size: ${({ theme }) => theme.fontSize.bodyXSmall};\n      opacity: ${({ theme }) => theme.opacityMuted};\n    }\n  }\n  .label {\n    opacity: ${({ theme }) => theme.opacityMuted};\n  }\n`;\n","import styled from \"styled-components/macro\";\n\nconst BasePlaceHolder = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  background-color: ${({ theme }) => theme.colors.backgroundLightMuted};\n`;\nexport const PlaceHolder = styled(BasePlaceHolder)<{\n  size?: string;\n  borderRadius?: string;\n}>`\n  height: ${({ size = \"2rem\" }) => size};\n  width: ${({ size = \"2rem\" }) => size};\n  ${({ borderRadius }) => borderRadius && `border-radius: ${borderRadius};`}\n`;\n\nexport interface TextPlaceholderProps {\n  width?: string;\n  height?: string;\n}\nexport const TextPlaceHolder = styled(BasePlaceHolder)<TextPlaceholderProps>`\n  height: ${({ height = \"1rem\" }) => height};\n  width: ${({ width = \"5rem\" }) => width};\n`;\n","import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AssetsService } from \"../../services/crypto_assets/AssetsService\";\nimport { AssetActionTypes } from \"./state/AssetActions\";\nimport { useService } from \"../../utils/hooks/useService\";\nimport { GetCryptoAssetsRequest } from \"../../services/crypto_assets/AssetsServiceInterface\";\nimport { useAppSelector } from \"../../redux/useAppSelector\";\n\nexport const useAssetsService = () => {\n  const dispatch = useDispatch();\n  const assetsState = useAppSelector((state) => state.assets);\n\n  const [setRequest] = useService(AssetsService.getCryptoAssets, {\n    onResponse(response) {\n      dispatch({\n        type: AssetActionTypes.GET_ASSETS_SUCCESS,\n        payload: response.assets,\n      });\n    },\n    onError() {\n      dispatch({\n        type: AssetActionTypes.GET_ASSETS_FAILURE,\n        payload: \"Error getting assets\",\n        error: true,\n      });\n    },\n  });\n\n  const getAssets = useCallback(\n    (request: GetCryptoAssetsRequest) => {\n      dispatch({ type: AssetActionTypes.GET_ASSETS_REQUEST });\n      setRequest(request);\n    },\n    [dispatch, setRequest],\n  );\n\n  return {\n    assets: assetsState?.list,\n    status: assetsState?.status,\n    error: assetsState?.error,\n    getAssets,\n  };\n};\n\nexport const useAssetDetailsService = (assetId: string) => {\n  const dispatch = useDispatch();\n  const assetsState = useAppSelector((state) => state.assets);\n\n  const [setRequest] = useService(AssetsService.getAssetDetails, {\n    onResponse(response) {\n      dispatch({\n        type: AssetActionTypes.UPDATE_ASSET,\n        payload: response,\n      });\n    },\n    onError() {\n      dispatch({\n        type: AssetActionTypes.GET_ASSETS_FAILURE,\n        payload: `Error getting ${assetId} details`,\n        error: true,\n      });\n    },\n  });\n\n  const getAsset = useCallback(() => {\n    dispatch({ type: AssetActionTypes.GET_ASSETS_REQUEST });\n    setRequest({ id: assetId });\n  }, [dispatch, setRequest, assetId]);\n\n  return {\n    asset: assetsState?.list.get(assetId),\n    status: assetsState?.status,\n    error: assetsState?.error,\n    getAsset,\n  };\n};\n","import { isDefined } from \"./isDefined\";\n\nexport const typedObjectEntries = <\n  T extends Record<string, any>,\n  K extends keyof T\n>(\n  obj: T,\n) => Object.entries(obj) as Array<[K, T[K]]>;\n\nexport const removeUndefinedEntries = <T extends Record<string, any>>(\n  obj: T,\n): T => {\n  const validEntries = Object.entries(obj).filter(([key, value]) =>\n    isDefined(value),\n  );\n\n  return Object.fromEntries(validEntries) as T;\n};\n","import { Observable } from \"rxjs\";\nimport { retryWhen, tap, delay } from \"rxjs/operators\";\n\nconst DEFAULT_ERROR_MESSAGE = \"connection failed, retrying...\";\nexport const retryConnection = <T>(errorMessage = DEFAULT_ERROR_MESSAGE) =>\n  retryWhen<T>((errors: Observable<any>) =>\n    errors.pipe(\n      tap(() => console.log(errorMessage)),\n      delay(2000),\n    ),\n  );\n","import { mergeMap, throttleTime } from \"rxjs/operators\";\nimport { retryConnection } from \"../../utils/retryConnection\";\nimport { getSafeNumber } from \"../../utils/safeGetters\";\nimport { pricesStreamApi } from \"../connection/apis\";\nimport { webSocketConnection } from \"../connection/websocketConnection\";\nimport {\n  AssetPrice,\n  FeedServiceInterface,\n  PriceFeedSubscriptionRequest,\n} from \"./FeedServiceInterface\";\n\nconst PRICES_PATH = `${pricesStreamApi}/prices`;\n\nconst mapAssetPriceToPriceUpdate = (asset: AssetPrice) => {\n  return Object.entries(asset).map(([id, priceUsd]) => ({\n    id,\n    price: getSafeNumber(priceUsd)!,\n  }));\n};\n\nexport const FeedService: FeedServiceInterface = {\n  priceFeed: (request: PriceFeedSubscriptionRequest) => {\n    return webSocketConnection<PriceFeedSubscriptionRequest, AssetPrice>(\n      PRICES_PATH,\n      request,\n    ).pipe(\n      throttleTime(500),\n      mergeMap(mapAssetPriceToPriceUpdate),\n      retryConnection(\n        \"failed to connect to price feed. attempting to reconnect...\",\n      ),\n    );\n  },\n};\n","import { webSocket, WebSocketSubject } from \"rxjs/webSocket\";\nimport { parseJson } from \"../../utils/parseJson\";\nimport { getRequestParams } from \"./connectionHelpers\";\n\nexport const webSocketConnection = <Request, Response>(\n  endpoint: string,\n  request: Request,\n): WebSocketSubject<Response> => {\n  const { url } = getRequestParams(endpoint, request, undefined);\n  const subject = webSocket({\n    url,\n    deserializer: (event) => parseJson(event.data),\n    openObserver: {\n      next() {\n        console.info(`websocket connection opened.\\nsubscribed to ${url}`);\n      },\n    },\n    closeObserver: {\n      next(closeEvent) {\n        console.warn(closeEvent.code, \"websocket connection closed\");\n      },\n    },\n  });\n\n  return subject;\n};\n","import { useMemo, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AssetActionTypes } from \"../../components/crypto-assets/state/AssetActions\";\nimport { useAppSelector } from \"../../redux/useAppSelector\";\nimport { FeedService } from \"../../services/feeds/FeedService\";\nimport { useService } from \"./useService\";\n\nexport const usePricesFeed = () => {\n  const dispatch = useDispatch();\n  const assetsState = useAppSelector((state) => state.assets?.list);\n  const assets = useMemo(() => assetsState?.keySeq().toArray(), [assetsState]);\n  const prevAssets = useRef<string>();\n\n  const [subscribeToFeed] = useService(FeedService.priceFeed, {\n    onResponse(response) {\n      dispatch({\n        type: AssetActionTypes.UPDATE_ASSET,\n        payload: response,\n      });\n    },\n    onError(err) {\n      console.error(\"Error\", err);\n    },\n  });\n\n  useEffect(() => {\n    const stringAssets = String(assets);\n    if (assets && stringAssets !== prevAssets.current) {\n      prevAssets.current = stringAssets;\n      subscribeToFeed({ assets });\n    }\n  }, [subscribeToFeed, assets]);\n};\n"],"sourceRoot":""}